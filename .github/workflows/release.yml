name: "🚀 Release"

on:
  workflow_dispatch:

concurrency: "release"

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Checkout code"
        uses: actions/checkout@v4

      - name: "📦 Install dependencies"
        uses: reactgular/cache@v1
        with:
          mode: "install"

  version:
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Checkout code"
        uses: actions/checkout@v4

      - name: "🔍 Read package.json version"
        id: check_version
        run: |
          PACKAGE_VERSION=$(jq -r .version < package.json)
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_ENV
          echo "::set-output name=package_version::${PACKAGE_VERSION}"
          echo "::notice file={package.json},title={Version}::Package version: ${PACKAGE_VERSION}"
    outputs:
      package_version: ${{ steps.check_version.outputs.package_version }}

  lint:
    runs-on: ubuntu-latest
    needs: [ install, check-version ]
    if: false
    steps:
      - name: "📥 Checkout code"
        uses: actions/checkout@v4

      - name: "💽 Restore node_modules cache"
        uses: reactgular/cache@v1
        with:
          mode: "restore"

      - name: "🔨 Lint"
        run: yarn lint

  test:
    runs-on: ubuntu-latest
    needs: [ install, check-version ]
    if: false
    steps:
      - name: "📥 Checkout code"
        uses: actions/checkout@v4

      - name: "💽 Restore node_modules cache"
        uses: reactgular/cache@v1
        with:
          mode: "restore"

      - name: "🔨 Test"
        run: ${{ env.NX }} affected -t test

  storybooks:
    runs-on: ubuntu-latest
    needs: [ install, check-version ]
    if: false
    steps:
      - name: "📥 Checkout code"
        uses: actions/checkout@v4

      - name: "💽 Restore node_modules cache"
        uses: reactgular/cache@main
        with:
          mode: "restore"

      - name: "🔨 Build storybooks"
        run: yarn build-storybook

  build:
    runs-on: ubuntu-latest
    needs: [ install, check-version ]
    if: false
    steps:
      - name: "📥 Checkout code"
        uses: actions/checkout@v4

      - name: "💽 Restore node_modules cache"
        uses: reactgular/cache@v1
        with:
          mode: "restore"

      - name: "🔨 Build projects"
        run: yarn build

  release-failure:
    runs-on: ubuntu-latest
    needs: [ install, check-version, lint, build ]
    if: false
    steps:
      - name: Mark release as bad
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const tag_name = context.ref.replace('refs/tags/', '');
            const release = await github.rest.repos.getReleaseByTag({ owner, repo, tag: tag_name });
            await github.repos.updateRelease({
              owner,
              repo,
              release_id: release.data.id,
              body: release.data.body + '\n\n:warning: The release build has failed.',
              draft: true
            });
