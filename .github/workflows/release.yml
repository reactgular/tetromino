name: "🚀 Release"

on:
  release:
    types:
      - prereleased
      - released

concurrency: "release"

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Checkout code"
        uses: actions/checkout@v4

      - name: "📦 Install dependencies"
        uses: reactgular/cache@v1
        with:
          mode: "install"

  lint:
    runs-on: ubuntu-latest
    needs: [ install ]
    steps:
      - name: "📥 Checkout code"
        uses: actions/checkout@v4

      - name: "💽 Restore node_modules cache"
        uses: reactgular/cache@v1
        with:
          mode: "restore"

      - name: "🔨 Lint"
        run: yarn lint

  test:
    runs-on: ubuntu-latest
    needs: [ install ]
    if: false
    steps:
      - name: "📥 Checkout code"
        uses: actions/checkout@v4

      - name: "💽 Restore node_modules cache"
        uses: reactgular/cache@v1
        with:
          mode: "restore"

      - name: "🔨 Test"
        run: ${{ env.NX }} affected -t test

  storybooks:
    runs-on: ubuntu-latest
    needs: [ install ]
    if: false
    steps:
      - name: "📥 Checkout code"
        uses: actions/checkout@v4

      - name: "💽 Restore node_modules cache"
        uses: reactgular/cache@main
        with:
          mode: "restore"

      - name: "🔨 Build storybooks"
        run: yarn build-storybook

  check-version:
    runs-on: ubuntu-latest
    needs: [ install ]
    steps:
      - name: "🔍 Check package.json version"
        id: check_version
        run: |
          PACKAGE_VERSION=$(jq -r .version < package.json)
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_ENV
          RELEASE_VERSION=${GITHUB_REF#refs/tags/}
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
          if [ "${PACKAGE_VERSION}" != "${RELEASE_VERSION}" ]; then
            echo "Version mismatch: package.json version (${PACKAGE_VERSION}) does not match release version (${RELEASE_VERSION})"
            exit 1
          else
            echo "Version matches: package.json version (${PACKAGE_VERSION}) matches release version (${RELEASE_VERSION})"
          fi

  build:
    runs-on: ubuntu-latest
    needs: [ install ]
    steps:
      - name: "📥 Checkout code"
        uses: actions/checkout@v4

      - name: "💽 Restore node_modules cache"
        uses: reactgular/cache@v1
        with:
          mode: "restore"

      - name: "🔨 Build projects"
        run: yarn build
