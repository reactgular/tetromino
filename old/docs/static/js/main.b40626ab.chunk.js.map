{"version":3,"sources":["store/game/game-model.ts","environment/environment.ts","store/select-root.ts","store/game/game-selectors.ts","components/particles/key_bindings.types.ts","store/app/app-model.ts","store/app/app-selectors.ts","store/app/app-actions.ts","store/app/app-state.ts","store/snapshot-middleware.ts","components/particles/hooks/useLogger.tsx","engine/game-tetrominos.ts","components/particles/audio.types.tsx","components/particles/utilities.types.ts","engine/game-cell.ts","engine/game-row.ts","engine/game-collision.ts","engine/game-transform.ts","engine/game-player.ts","engine/game-pieces.ts","engine/game-buffer.ts","engine/game-ghost.ts","engine/game-reset.ts","engine/game-score.ts","engine/game-screen.ts","engine/game-sound.ts","store/game/game-actions.ts","store/game/game-state.ts","engine/game-tick.ts","store/root-reducer.ts","store/app-store.ts","components/particles/ui/UiButton.tsx","components/particles/ui/UiDialog.tsx","components/particles/hooks/useModalView.tsx","components/particles/strings.types.ts","components/molecules/app/AppDialog.tsx","components/molecules/game/GameCredits.tsx","components/organisms/dialogs/CreditsDialog.tsx","components/particles/contexts/UiThemeContext.tsx","components/atoms/app/AppBar.tsx","components/atoms/game/GameDigits.tsx","components/particles/hooks/useSpaces.tsx","components/particles/hooks/useZeros.tsx","components/particles/hooks/useMaxDigits.tsx","components/molecules/game/GameScore.tsx","components/molecules/game/GameFinish.tsx","components/organisms/dialogs/FinishDialog.tsx","components/molecules/game/GameHighScores.tsx","components/organisms/dialogs/HighScoresDialog.tsx","components/atoms/app/AppCopyright.tsx","components/particles/ui/UiToggle.tsx","components/molecules/app/AppDarkMode.tsx","components/particles/ui/UiSelect.tsx","components/organisms/options/OptionsAudio.tsx","components/organisms/options/OptionsGame.tsx","components/atoms/app/AppKeyBinding.tsx","components/organisms/app/AppKeyPicker.tsx","components/organisms/options/OptionsKeyBindings.tsx","components/organisms/game/GameOptions.tsx","components/organisms/dialogs/OptionsDialog.tsx","components/atoms/app/AppMenu.tsx","components/organisms/dialogs/PauseDialog.tsx","components/particles/hooks/usePageView.tsx","components/particles/hooks/useTitle.tsx","components/atoms/game/GameValue.tsx","components/atoms/game/GameBlock.tsx","components/molecules/design/DesignDisplay.tsx","components/molecules/game/GamePieces.tsx","components/particles/nulls/KeyPressed.tsx","components/atoms/game/GameHold.tsx","components/atoms/game/GameRotate.tsx","components/atoms/game/GameSettings.tsx","components/atoms/game/GameDrop.tsx","components/particles/nulls/Repeater.tsx","components/atoms/game/GameMove.tsx","components/molecules/game/GameArrows.tsx","components/organisms/game/GameControls.tsx","components/particles/hooks/useInterval.tsx","components/atoms/game/GameTicker.tsx","components/atoms/game/GameTimer.tsx","components/atoms/game/GameBlockIndex.tsx","components/molecules/game/GameGrid.tsx","components/atoms/game/GameAudio.tsx","components/molecules/game/GameMusic.tsx","components/atoms/game/GameAudioLoader.tsx","components/molecules/game/GamePreloader.tsx","components/molecules/game/GameSoundTracks.tsx","components/molecules/game/GameToast.tsx","components/organisms/game/GameEngine.tsx","components/particles/hooks/useDocVisible.tsx","components/molecules/game/GameNumber.tsx","components/organisms/game/GameNumbers.tsx","components/templates/GameDesktop.tsx","components/templates/GameMobile.tsx","components/particles/generators/animations.ts","components/particles/hooks/useLetters.tsx","components/atoms/app/AppLogo.tsx","components/templates/Welcome.tsx","components/templates/App.tsx","components/particles/hooks/usePersist.tsx","components/atoms/app/AppTheme.tsx","components/particles/hooks/useDarkMode.tsx","components/templates/Providers.tsx","reportWebVitals.ts","index.tsx"],"names":["GameStatus","environment","analytics","process","brandName","github","storageKey","version","base","selectRoot","state","GAME_INITIAL_STATE","buffer","rows","width","height","restart_ticker","fast_speed","level","lines_total","lines_level","lines_level_up","hold_enable","next","undefined","next_max","player_freeze","repeat_speed","score","screen","soft_drop","sound_id","sound_tracks","status","WELCOME","GAME_NAME","game","createSelector","size","FINISHING","FINISHED","PAUSED","STARTING","RUNNING","hold","indx","player","speed","Math","max","toast_message","GameSelectors","AppDialogType","KEY_BINDINGS","KEY_BINDING_LABELS","left","right","rotate_left","rotate_right","hard_drop","APP_INITIAL_STATE","dark","ghost_piece","high_scores","music","music_type","music_volume","sound","sound_volume","start_level","keys","APP_PERSIST_DEFAULT","APP_NAME","app","Boolean","highScores","ghostPiece","musicType","musicVolume","soundVolume","dialog","startLevel","show","AppSelectors","SnapShotMiddleware","getState","action","snapshot","ref","log","console","error","debug","logger","prefix","name","func","bind","createAction","AppActions","track","value","ReactGA","event","category","createSlice","initialState","reducers","extraReducers","builder","addCase","payload","key","code","keyOf","open","close","min","recordScore","Array","from","Set","sort","a","b","reverse","slice","resetScore","resetOptions","persist","restore","AppState","TetrominosType","AUDIO_FILES","SOUND_FINISHED","SOUND_LEVEL","SOUND_SCORE","SOUND_DROP","SOUND_LEVEL_10","PRELOAD_AUDIO","VOLUME_OPTIONS","fill","map","_","label","MUSIC_TYPES","SOUND_ICON","true","false","SOUND_TOOLTIP","MUSIC_ICON","MUSIC_TOOLTIP","TETROMINOS_TYPES","Object","values","rand","floor","random","randTetro","length","gameBufferCells","i","gameBufferRows","cells","gameCollideBuffer","x","y","gameCollideBlock","type","gameCollision","piece","trans_x","trans_y","GamePlayerDirection","GAME_PIECES","O","I","S","Z","L","J","T","gamePlayerDrop","rotate","offset_x","offset_y","row","add","lines","forEach","every","cell","removed","gamePlayerTransform","translator","rotator","trans","gameTransform","translateDown","translateNoop","coords","rotateNoop","pieces","translateDirection","LEFT","RIGHT","rotateDirection","rot","trans_rot","gameGhost","ghost","gameReset","count","LEVEL_1_PER_LINE","1","n","2","3","4","LEVEL_2_PER_LINE","LEVEL_3_PER_LINE","LEVEL_N_PER_LINE","gamePoints","gamePointsLines","gameScreenFlatten","glow","gameScreenRender","streak_y","writerGhost","gameScreenWriter","writerPlayer","dist","writerDrop","percent","write","gameSound","src","push","id","gameTickRows","removeIndex","findIndex","splice","unshift","gameBufferRemoveRow","GameActions","softDrop","start","reset","run","pause","resume","quit","render","tick","collision","gameTickPlayer","old_level","gameScore","shift","some","gamePlayerCreate","finishing","isRemoved","find","filter","nextRow","r","hardDrop","origin_y","gameDropPlayer","bufferSet","bufferPatch","patch","gameBufferPatch","move","soundTrack","GameState","getRootReducer","combineReducers","reducer","UiButtonShape","useAppDispatch","useDispatch","getAppStore","preloadedState","rootReducer","configureStore","devTools","maxAge","middleware","getDefaultMiddleware","configureAppStore","UiDialog","onClose","title","large","children","className","smallScreen","useMediaQuery","fullScreen","useMemo","useEffect","str","modalview","match","toLowerCase","join","useModalView","Dialog","classNames","PaperProps","onClick","AppDialog","closeAction","selectOpen","dispatch","useSelector","GameCredits","credits","desc","url","href","gameCredits","CreditsDialog","isOpen","CREDITS","UiThemeContext","createContext","transparent","useUiTheme","useContext","UiThemeProvider","Provider","UiButton","active","disabled","preventFocus","primary","secondary","toolTip","shape","NORMAL","onPress","onMouseDown","onMouseUp","onRelease","props","touching","useRef","pressing","classes","ROUND","UP","DOWN","Tooltip","onTouchStart","current","onTouchEnd","e","preventDefault","onMouseLeave","AppBar","tools","icon","GameDigits","digits","zeros","repeat","useZeros","maxDigits","toString","useMaxDigits","spaces","__html","color","dangerouslySetInnerHTML","GameScore","rank","GameFinish","actionHome","actionRestart","actionHighScores","HIGH_SCORES","indexOf","FinishDialog","selectStart","finished","GameHighScores","selectScores","scores","HighScoresDialog","AppCopyright","UiToggle","onChange","iconOn","iconOff","cloneOn","cloneElement","cloneOff","AppDarkMode","selectDark","UiSelect","options","option","increase","useCallback","decrease","OptionsAudio","OptionsGame","CODE_PREFIXES","AppKeyBinding","keyCode","replace","toSpaces","reduce","trim","AppKeyPicker","listener","document","addEventListener","once","removeEventListener","OptionsKeyBindings","selectKeys","actionKeys","useState","pickKey","setPickKey","useLogger","GameOptions","darkMode","OptionsDialog","selectWelcoming","welcoming","OPTIONS","AppMenu","items","PauseDialog","selectMusic","selectSound","paused","menu","usePageView","pageview","STATUS_TITLE","GameValue","GAME_BLOCK_COLOR","GameBlock","grid","styleAnimation","style","data-testid","DesignDisplay","center","blocks","center_x","center_y","gridTemplateColumns","blockType","GamePieces","selectPieces","KeyPressed","GameHold","onHold","setActive","GameRotate","keyCodeLeft","keyCodeRight","onRotateLeft","onRotateRight","setLeft","setRight","btnClass","GameSettings","GameDrop","onDrop","Repeater","emitFirst","onRepeat","setInterval","clearInterval","GameMove","onMove","setCount","enable","setEnable","startRepeat","stopRepeat","GameArrows","onHardDrop","onLeft","onRight","onSoftDrop","GameControls","selectRepeatSpeed","repeatSpeed","selectEnabled","running","selectHoldEnabled","holdEnabled","enabled","fast","useInterval","callback","ms","deps","all_deps","GameTicker","onTick","GameTimer","onStart","counter","setCounter","defaultProps","GameBlockIndex","screenCell","GameGrid","GameAudio","autoPlay","loop","onDone","onLoaded","volume","controls","onEnded","onCanPlayThrough","GameMusic","GameAudioLoader","sources","sourceMap","pairs","Map","setLoaded","set","loaded","GamePreloader","preload","GameSoundTracks","soundTracks","GameToast","message","GameEngine","showToast","setShowToast","visible","isVisible","visibilityState","setVisible","onVisible","useDocVisible","starting","restartTicker","toast","toastMessage","setTimeout","clearTimeout","GameNumber","GameNumbers","GameDesktop","floatControls","GameMobile","aniStrobe","aniFlash","aniRandom","aniSlide","aniAll","COLORS","offset","forward","colors","c","flat","end","nextColors","letters","useLetters","setColors","char","createLetters","AppLogo","Welcome","toUpperCase","App","isWideScreen","isShortScreen","isNarrowScreen","json","localStorage","getItem","data","JSON","parse","err","setItem","stringify","usePersist","useTitle","AppTheme","html","documentElement","classList","remove","useDarkMode","StylesProvider","injectFirst","Providers","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b40626ab.chunk.js","sourcesContent":["import {SoundTrack} from '../../components/particles/audio.types';\nimport {GameBuffer} from '../../engine/game-buffer';\nimport {GameGhost, GamePlayer} from '../../engine/game-player';\nimport {GameScreen} from '../../engine/game-screen';\nimport {TetrominosType} from '../../engine/game-tetrominos';\n\n/**\n * Status controls the running state of the game.\n */\nexport enum GameStatus {\n    /**\n     * Shows the welcome screen.\n     */\n    WELCOME = 'welcome',\n    /**\n     * Shows the count down timer.\n     */\n    STARTING = 'starting',\n    /**\n     * Pieces are falling.\n     */\n    RUNNING = 'running',\n    /**\n     * Game is in progress but paused.\n     */\n    PAUSED = 'paused',\n    /**\n     * Game is over and collecting final points.\n     */\n    FINISHING = 'finishing',\n    /**\n     * Game is finished and final score is shown.\n     */\n    FINISHED = 'finished'\n}\n\nexport type NextTetrominos = Array<TetrominosType | undefined>;\n\n/**\n * The store for the game engine.\n */\nexport interface GameModel {\n    /**\n     * Defines the background buffer of blocks.\n     */\n    buffer: GameBuffer;\n\n    /**\n     * Speed for fast mode.\n     */\n    fast_speed: number;\n\n    /**\n     * Defines the location of the ghost piece.\n     */\n    ghost?: GameGhost;\n\n    /**\n     * Stores a piece being held.\n     */\n    hold?: TetrominosType;\n\n    /**\n     * Controls holding only once per turn.\n     */\n    hold_enable: boolean;\n\n    /**\n     * Player's current level.\n     */\n    level: number;\n\n    /**\n     * Number of lines cleared on current level.\n     */\n    lines_level: number;\n\n    /**\n     * Number of lines to clear current level.\n     */\n    lines_level_up: number;\n\n    /**\n     * Number of lines cleared so far.\n     */\n    lines_total: number;\n\n    /**\n     * Collection of pieces coming next.\n     */\n    next: NextTetrominos;\n\n    /**\n     * Number of pieces in the next queue.\n     */\n    next_max: number;\n\n    /**\n     * Defines the location of the current piece.\n     */\n    player?: GamePlayer;\n\n    /**\n     * Piece was hard dropped.\n     */\n    player_freeze: boolean;\n\n    /**\n     * Speed of repeating control inputs.\n     */\n    repeat_speed: number;\n\n    /**\n     * Uses to restart the game ticker.\n     */\n    restart_ticker: number;\n\n    /**\n     * Player's current score.\n     */\n    score: number;\n\n    /**\n     * Output buffer that combines the background buffer and player's falling\n     * piece.\n     */\n    screen: GameScreen;\n\n    /**\n     * Player is holding the soft drop key.\n     */\n    soft_drop: boolean;\n\n    /**\n     * Next sound track ID.\n     */\n    sound_id: number;\n\n    /**\n     * Collection of sound tracks being played.\n     */\n    sound_tracks: Array<SoundTrack>;\n\n    /**\n     * Game status\n     */\n    status: GameStatus;\n\n    /**\n     * Displays a message to the player.\n     */\n    toast_message?: string;\n}\n\n/**\n * Default state of the store.\n */\nexport const GAME_INITIAL_STATE: GameModel = {\n    buffer: {rows: [], width: 0, height: 0},\n    restart_ticker: 0,\n    fast_speed: 25,\n    level: 1,\n    lines_total: 0,\n    lines_level: 0,\n    lines_level_up: 1,\n    hold_enable: true,\n    next: [undefined, undefined, undefined],\n    next_max: 3,\n    player_freeze: false,\n    repeat_speed: 100,\n    score: 0,\n    screen: [],\n    soft_drop: false,\n    sound_id: 1,\n    sound_tracks: [],\n    status: GameStatus.WELCOME\n};\n\n/**\n * Name of the store.\n */\nexport const GAME_NAME = 'game';\n","export interface Environment {\n    analytics: string;\n\n    base: string;\n\n    brandName: string;\n\n    github: string;\n\n    storageKey: string;\n\n    version: string;\n}\n\nexport const environment: Environment = {\n    analytics: process.env.REACT_APP_ANALYTICS as string,\n    brandName: process.env.REACT_APP_BRAND_NAME as string,\n    github: process.env.REACT_APP_GITHUB as string,\n    storageKey: process.env.REACT_APP_STORAGE_KEY as string,\n    version: process.env.REACT_APP_VERSION as string,\n    base: process.env.REACT_APP_BASE as string\n};\n","import {AppState} from './app-store';\n\n/**\n * Root selector function that helps infer type.\n */\nexport const selectRoot = (state: AppState) => state;\n","import {createSelector} from '@reduxjs/toolkit';\nimport {selectRoot} from '../select-root';\nimport {GameStatus, NextTetrominos} from './game-model';\n\nexport namespace GameSelectors {\n    /**\n     * Root game selector.\n     */\n    export const game = createSelector(selectRoot, (state) => state.game);\n\n    const buffer = createSelector(game, (game) => game.buffer);\n    const screen = createSelector(game, (game) => game.screen);\n\n    /**\n     * Status of the game engine.\n     */\n    export const status = createSelector(game, (game) => game.status);\n\n    /**\n     * show the welcome screen.\n     */\n    export const welcoming = createSelector(\n        status,\n        (status) => status === GameStatus.WELCOME\n    );\n\n    /**\n     * Play finish animation.\n     */\n    export const finishing = createSelector(\n        status,\n        (status) => status === GameStatus.FINISHING\n    );\n\n    /**\n     * Show the finished dialog.\n     */\n    export const finished = createSelector(\n        status,\n        (status) => status === GameStatus.FINISHED\n    );\n\n    /**\n     * Show the paused dialog.\n     */\n    export const paused = createSelector(\n        status,\n        (status) => status === GameStatus.PAUSED\n    );\n\n    /**\n     * Show the count down timer.\n     */\n    export const starting = createSelector(\n        status,\n        (status) => status === GameStatus.STARTING\n    );\n\n    /**\n     * Run the game engine.\n     */\n    export const running = createSelector(\n        status,\n        (status) => status === GameStatus.RUNNING\n    );\n\n    /**\n     * Selects current level.\n     */\n    export const level = createSelector(game, (game) => game.level);\n\n    /**\n     * Lines cleared by the player.\n     */\n    export const lines = createSelector(game, (game) => {\n        return game.lines_total + game.lines_level;\n    });\n\n    /**\n     * Changes to restart the game tick timer.\n     */\n    export const restartTicker = createSelector(\n        game,\n        (game) => game.restart_ticker\n    );\n\n    /**\n     * Selects current score.\n     */\n    export const score = createSelector(game, (game) => game.score);\n\n    /**\n     * Selects the next piece.\n     */\n    export const next = createSelector(game, (game) => game.next);\n\n    /**\n     * Selects the piece being held.\n     */\n    export const hold = createSelector(\n        game,\n        (game) => (game.hold ? [game.hold] : [undefined]) as NextTetrominos\n    );\n\n    /**\n     * Selects if hold is enabled.\n     */\n    export const holdEnabled = createSelector(game, (game) => game.hold_enable);\n\n    /**\n     * How fast input controls is repeated.\n     */\n    export const repeatSpeed = createSelector(\n        game,\n        (game) => game.repeat_speed\n    );\n\n    /**\n     * Selects a specific cell on the screen.\n     */\n    export const screenCell = (indx: number) =>\n        createSelector(screen, (screen) => screen[indx]);\n\n    /**\n     * Selects the game speed.\n     */\n    export const speed = createSelector(game, (game) => {\n        if (game.soft_drop && game.player) {\n            return game.fast_speed;\n        }\n        const speed = 500 - game.level * 20;\n        return Math.max(game.fast_speed, speed);\n    });\n\n    /**\n     * Selects the size of the buffer.\n     */\n    export const size = createSelector(buffer, ({width, height}) => [\n        width,\n        height\n    ]);\n\n    /**\n     * Selects the CSS aspect ratio of the game board.\n     * Includes padding adjustments.\n     */\n    export const aspectRatio = createSelector(\n        size,\n        ([width, height]) => `${width / height} / 0.9`\n    );\n\n    /**\n     * Selects the sound tracks to play.\n     */\n    export const soundTracks = createSelector(\n        game,\n        (game) => game.sound_tracks\n    );\n\n    /**\n     * Selects a toast message for the player.\n     */\n    export const toastMessage = createSelector(\n        game,\n        (game) => game.toast_message\n    );\n}\n","export interface KeyBindings {\n    hard_drop: string;\n\n    hold: string;\n\n    left: string;\n\n    right: string;\n\n    rotate_left: string;\n\n    rotate_right: string;\n\n    soft_drop: string;\n}\n\nexport const DEFAULT_KEY_BINDINGS: KeyBindings = {\n    right: 'ArrowRight',\n    left: 'ArrowLeft',\n    rotate_left: 'ArrowUp',\n    rotate_right: 'KeyZ',\n    soft_drop: 'ArrowDown',\n    hard_drop: 'Space',\n    hold: 'KeyC'\n};\n\nexport const KEY_BINDINGS: Array<keyof KeyBindings> = [\n    'left',\n    'right',\n    'rotate_left',\n    'rotate_right',\n    'soft_drop',\n    'hard_drop',\n    'hold'\n];\n\nexport const KEY_BINDING_LABELS: Record<keyof KeyBindings, string> = {\n    left: 'Move Left',\n    right: 'Move Right',\n    rotate_left: 'Rotate Left',\n    rotate_right: 'Rotate Right',\n    soft_drop: 'Soft Drop',\n    hard_drop: 'Hard Drop',\n    hold: 'Hold'\n};\n","import {\n    DEFAULT_KEY_BINDINGS,\n    KeyBindings\n} from '../../components/particles/key_bindings.types';\nimport {environment} from '../../environment/environment';\n\n/**\n * Defines dialogs that can be shown.\n */\nexport enum AppDialogType {\n    OPTIONS = 'options',\n    HIGH_SCORES = 'high_scores',\n    CREDITS = 'credits'\n}\n\nexport interface AppModel {\n    /**\n     * Toggles dark mode for the theme.\n     */\n    dark: boolean;\n\n    /**\n     * Current visible dialog.\n     */\n    dialog?: AppDialogType;\n\n    /**\n     * Show a ghost of where a piece will land.\n     */\n    ghost_piece: boolean;\n\n    /**\n     * List of high scores.\n     */\n    high_scores: Array<number>;\n\n    /**\n     * Game keyboard bindings.\n     */\n    keys: KeyBindings;\n\n    /**\n     * Play music.\n     */\n    music: boolean;\n\n    /**\n     * Music track to play.\n     */\n    music_type: number;\n\n    /**\n     * Music volume.\n     */\n    music_volume: number;\n\n    /**\n     * Play sound effects.\n     */\n    sound: boolean;\n\n    /**\n     * Sound volume.\n     */\n    sound_volume: number;\n\n    /**\n     * Player's starting level.\n     */\n    start_level: number;\n}\n\n/**\n * Default state for the app.\n */\nexport const APP_INITIAL_STATE: AppModel = {\n    dark: false,\n    ghost_piece: true,\n    high_scores: [],\n    music: true,\n    music_type: 0,\n    music_volume: 80,\n    sound: true,\n    sound_volume: 80,\n    start_level: 1,\n    keys: DEFAULT_KEY_BINDINGS\n};\n\n/**\n * Selection of state properties to persist to localStorage along with a\n * version to track compatability.\n */\nexport type AppPersist = Pick<\n    AppModel,\n    | 'dark'\n    | 'ghost_piece'\n    | 'start_level'\n    | 'sound'\n    | 'sound_volume'\n    | 'music'\n    | 'music_volume'\n    | 'music_type'\n    | 'high_scores'\n    | 'keys'\n> & {version: string};\n\n/**\n * Defaults persist values.\n */\nexport const APP_PERSIST_DEFAULT: AppPersist = {\n    dark: APP_INITIAL_STATE.dark,\n    ghost_piece: APP_INITIAL_STATE.ghost_piece,\n    start_level: APP_INITIAL_STATE.start_level,\n    sound: APP_INITIAL_STATE.sound,\n    sound_volume: APP_INITIAL_STATE.sound_volume,\n    music: APP_INITIAL_STATE.music,\n    music_volume: APP_INITIAL_STATE.music_volume,\n    music_type: APP_INITIAL_STATE.music_type,\n    high_scores: APP_INITIAL_STATE.high_scores,\n    keys: APP_INITIAL_STATE.keys,\n    version: environment.version\n};\n\nexport const APP_NAME = 'app';\n","import {createSelector} from '@reduxjs/toolkit';\nimport {environment} from '../../environment/environment';\nimport {selectRoot} from '../select-root';\nimport {AppDialogType, AppPersist} from './app-model';\n\nexport namespace AppSelectors {\n    /**\n     * Root app selector.\n     */\n    export const app = createSelector(selectRoot, (state) => state.app);\n\n    /**\n     * Selects if dark mode is enabled.\n     */\n    export const dark = createSelector(app, (app) => Boolean(app.dark));\n\n    /**\n     * Selects high scores.\n     */\n    export const highScores = createSelector(app, (app) => app.high_scores);\n\n    /**\n     * Selects ghost piece.\n     */\n    export const ghostPiece = createSelector(app, (app) => app.ghost_piece);\n\n    /**\n     * Selects if music is enabled.\n     */\n    export const music = createSelector(app, (app) => Boolean(app.music));\n\n    /**\n     * Selects if music is enabled.\n     */\n    export const musicType = createSelector(app, (app) => app.music_type);\n\n    /**\n     * Selects if music is enabled.\n     */\n    export const musicVolume = createSelector(app, (app) => app.music_volume);\n\n    /**\n     * Selects if dark mode is enabled.\n     */\n    export const sound = createSelector(app, (app) => Boolean(app.sound));\n\n    /**\n     * Selects if dark mode is enabled.\n     */\n    export const soundVolume = createSelector(app, (app) => app.sound_volume);\n\n    /**\n     * Selects which dialog is displayed.\n     */\n    export const dialog = createSelector(app, (app) => app.dialog);\n\n    /**\n     * Selects if a given dialog is visible.\n     */\n    export const isOpen = (show: AppDialogType) =>\n        createSelector(dialog, (dialog) => dialog === show);\n\n    /**\n     * Selects player's starting level.\n     */\n    export const startLevel = createSelector(app, (app) => app.start_level);\n\n    /**\n     * Selects the keyboard key bindings.\n     */\n    export const keys = createSelector(app, (app) => app.keys);\n\n    /**\n     * Selects values to persist to local storage.\n     */\n    export const persist = createSelector(\n        dark,\n        ghostPiece,\n        startLevel,\n        sound,\n        soundVolume,\n        music,\n        musicVolume,\n        musicType,\n        highScores,\n        keys,\n        (\n            dark,\n            ghost_piece,\n            start_level,\n            sound,\n            sound_volume,\n            music,\n            music_volume,\n            music_type,\n            high_scores,\n            keys\n        ): AppPersist => {\n            return {\n                version: environment.version,\n                dark,\n                ghost_piece,\n                start_level,\n                sound,\n                sound_volume,\n                music,\n                music_volume,\n                music_type,\n                high_scores,\n                keys\n            };\n        }\n    );\n}\n","import {createAction} from '@reduxjs/toolkit';\nimport {KeyBindings} from '../../components/particles/key_bindings.types';\nimport {APP_NAME, AppDialogType, AppPersist} from './app-model';\n\nexport namespace AppActions {\n    const prefix = (name: string) => `${APP_NAME}/${name}`;\n\n    /**\n     * Toggle dark  mode.\n     */\n    export const dark = createAction<boolean | undefined>(prefix('dark'));\n\n    /**\n     * Toggle ghost piece.\n     */\n    export const ghostPiece = createAction<boolean | undefined>(\n        prefix('ghost_piece')\n    );\n\n    /**\n     * Toggle playing of music.\n     */\n    export const music = createAction<boolean | undefined>(prefix('music'));\n\n    /**\n     * Changes the music track.\n     */\n    export const musicType = createAction<number>(prefix('music_type'));\n\n    /**\n     * Changes the music volume.\n     */\n    export const musicVolume = createAction<number>(prefix('music_volume'));\n\n    /**\n     * Toggle playing of sound effects.\n     */\n    export const sound = createAction<boolean | undefined>(prefix('sound'));\n\n    /**\n     * Changes the sound effects volume.\n     */\n    export const soundVolume = createAction<number>(prefix('sound_volume'));\n\n    /**\n     * Opens a dialog.\n     */\n    export const open = createAction<AppDialogType>(prefix('open'));\n\n    /**\n     * Closes currently open dialog.\n     */\n    export const close = createAction(prefix('close'));\n\n    /**\n     * Changes the player's starting level.\n     */\n    export const startLevel = createAction<number | undefined>(\n        prefix('start_level')\n    );\n\n    /**\n     * Adds a number to the high score board.\n     */\n    export const recordScore = createAction<number>(prefix('record_score'));\n\n    /**\n     * Resets the high score list.\n     */\n    export const resetScore = createAction(prefix('reset_store'));\n\n    /**\n     * Resets the app options.\n     */\n    export const resetOptions = createAction(prefix('reset_options'));\n\n    /**\n     * Patches the key bindings.\n     */\n    export const keys = createAction<{keyOf: keyof KeyBindings; code: string}>(\n        prefix('keys')\n    );\n\n    /**\n     * Restores saved state from localStorage.\n     */\n    export const persist = createAction<AppPersist>(prefix('persist'));\n}\n","import {createSlice} from '@reduxjs/toolkit';\nimport ReactGA from 'react-ga';\nimport {KEY_BINDINGS} from '../../components/particles/key_bindings.types';\nimport {environment} from '../../environment/environment';\nimport {AppActions} from './app-actions';\nimport {APP_INITIAL_STATE, APP_NAME} from './app-model';\n\nexport namespace AppState {\n    const track = (action: string, value?: number) => {\n        ReactGA.event({category: APP_NAME, action, value});\n    };\n\n    export const slice = createSlice({\n        name: APP_NAME,\n        initialState: APP_INITIAL_STATE,\n        reducers: {},\n        extraReducers: (builder) => {\n            builder\n                .addCase(AppActions.dark, (state, {payload}) => {\n                    state.dark =\n                        payload === undefined ? !state.dark : Boolean(payload);\n                    track('dark', state.dark ? 1 : 0);\n                })\n                .addCase(AppActions.ghostPiece, (state, {payload}) => {\n                    state.ghost_piece =\n                        payload === undefined\n                            ? !state.ghost_piece\n                            : Boolean(payload);\n                })\n                .addCase(AppActions.music, (state, {payload}) => {\n                    state.music =\n                        payload === undefined ? !state.music : Boolean(payload);\n                    track('music', state.music ? 1 : 0);\n                })\n                .addCase(AppActions.musicVolume, (state, {payload}) => {\n                    state.music_volume = payload;\n                })\n                .addCase(AppActions.musicType, (state, {payload}) => {\n                    state.music_type = payload;\n                    track('music_type', state.music_type);\n                })\n                .addCase(AppActions.sound, (state, {payload}) => {\n                    state.sound =\n                        payload === undefined ? !state.sound : Boolean(payload);\n                    track('sound', state.sound ? 1 : 0);\n                })\n                .addCase(AppActions.soundVolume, (state, {payload}) => {\n                    state.sound_volume = payload;\n                })\n                .addCase(AppActions.keys, (state, {payload}) => {\n                    for (const key of KEY_BINDINGS) {\n                        if (state.keys[key] === payload.code) {\n                            state.keys[key] = '';\n                            break;\n                        }\n                    }\n                    state.keys[payload.keyOf] = payload.code;\n                })\n                .addCase(AppActions.open, (state, {payload}) => {\n                    state.dialog = payload;\n                })\n                .addCase(AppActions.close, (state) => {\n                    state.dialog = undefined;\n                })\n                .addCase(AppActions.startLevel, (state, {payload}) => {\n                    const max_levels = 25;\n                    const skip_levels = 5;\n                    if (payload === undefined) {\n                        if (state.start_level === 1) {\n                            state.start_level = skip_levels;\n                        } else {\n                            state.start_level =\n                                state.start_level < max_levels\n                                    ? state.start_level + skip_levels\n                                    : 1;\n                        }\n                    } else {\n                        state.start_level = Math.max(\n                            1,\n                            Math.min(payload, max_levels)\n                        );\n                    }\n                    track('start_level', state.start_level);\n                })\n                .addCase(AppActions.recordScore, (state, {payload}) => {\n                    const high_scores = Array.from(\n                        new Set([...state.high_scores, payload])\n                    );\n                    high_scores.sort((a, b) => a - b);\n                    state.high_scores = high_scores.reverse().slice(0, 9);\n                    track('high_scores', payload);\n                })\n                .addCase(AppActions.resetScore, (state) => {\n                    state.high_scores = [];\n                })\n                .addCase(AppActions.resetOptions, (state) => {\n                    track('reset_options');\n                    const {dark, dialog, high_scores} = state;\n                    return {\n                        ...APP_INITIAL_STATE,\n                        dark,\n                        dialog,\n                        high_scores\n                    };\n                })\n                .addCase(AppActions.persist, (state, {payload}) => {\n                    const {version, ...restore} = payload;\n                    if (version === environment.version) {\n                        return {\n                            ...state,\n                            ...restore\n                        };\n                    }\n                });\n        }\n    });\n}\n","import {Action, Middleware} from 'redux';\nimport {AppState} from './app-store';\n\n/**\n * Adds a snapshot of the store to each action.\n */\nexport const SnapShotMiddleware: Middleware = ({getState}) => {\n    return (next) => (action) => {\n        return next({...action, snapshot: getState()});\n    };\n};\n\n/**\n * Declares an action that contains a snapshot of the store.\n */\nexport interface AppAction<TType = unknown> extends Action<string> {\n    payload: TType;\n\n    snapshot?: Readonly<AppState>;\n\n    // Allows any extra properties to be defined in an action.\n    [extraProps: string]: any;\n}\n\n/**\n * Allows us to use the snapshot inside a reducer case.\n */\nexport declare interface SnapshotAction<TType = unknown> {\n    type: string;\n\n    (...args: any[]): AppAction<TType>;\n}\n","import {useMemo} from 'react';\n\n/**\n * Prevents React.DOM from replacing methods inside hooks.\n */\nconst ref: Record<string, unknown> = {\n    log: console.log,\n    error: console.error,\n    debug: console.debug\n};\n\nexport const logger = (prefix: string, name: string = 'log') => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const func = ref[name] || (console as any)[name];\n    return func.bind(console, `${prefix}:`);\n};\n\nexport const loggerDebug = (prefix: string) => logger(prefix, 'debug');\n\nexport const loggerError = (prefix: string) => logger(prefix, 'error');\n\nexport const useLogger = (prefix: string, name: string = 'log') => {\n    return useMemo(() => logger(prefix, name), [prefix, name]);\n};\n\nexport const useDebugger = (prefix: string) => {\n    return useMemo(() => loggerDebug(prefix), [prefix]);\n};\n\nexport const useError = (prefix: string) => {\n    return useMemo(() => loggerError(prefix), [prefix]);\n};\n","/**\n * Defines all the game pieces.\n */\nexport enum TetrominosType {\n    I = 'i',\n    O = 'o',\n    T = 't',\n    S = 's',\n    Z = 'z',\n    J = 'j',\n    L = 'l'\n}\n\n/**\n * An array of game piece letters.\n */\nexport const TETROMINOS_TYPES = Object.values(TetrominosType);\n","import {ReactElement} from 'react';\nimport {FaMusic, FaVolumeMute, FaVolumeUp} from 'react-icons/fa';\nimport {environment} from '../../environment/environment';\nimport {UiOption} from './ui/UiSelect';\n\nexport const AUDIO_FILES = [\n    `${environment.base}/audio/music/bonkers-for-arcades.mp3`,\n    `${environment.base}/audio/music/the-ice-cream-man.mp3`,\n    `${environment.base}/audio/music/8-bit-perplexion.mp3`,\n    `${environment.base}/audio/music/its-raining-pixels.mp3`,\n    `${environment.base}/audio/music/arcade-puzzler.mp3`\n];\n\nexport const SOUND_FINISHED = `${environment.base}/audio/sounds/power-down-13.mp3`;\nexport const SOUND_LEVEL = `${environment.base}/audio/sounds/retro-chip-power.mp3`;\nexport const SOUND_SCORE = `${environment.base}/audio/sounds/ui-quirky-19.mp3`;\nexport const SOUND_DROP = `${environment.base}/audio/sounds/zapsplat_bambo_swoosh.mp3`;\nexport const SOUND_LEVEL_10 = `${environment.base}/audio/sounds/zapsplat_level_up.mp3`;\n\nexport const PRELOAD_AUDIO = [\n    SOUND_FINISHED,\n    SOUND_LEVEL,\n    SOUND_SCORE,\n    SOUND_DROP,\n    SOUND_LEVEL_10\n];\n\nexport const VOLUME_OPTIONS: Array<UiOption<number>> = Array(11)\n    .fill(null)\n    .map((_, indx) => indx * 10)\n    .map((value) => ({label: `${value}%`, value}));\n\nexport const MUSIC_TYPES: Array<UiOption<number>> = AUDIO_FILES.map(\n    (_, value) => ({label: `Type ${value + 1}`, value})\n);\n\nexport const SOUND_ICON: Record<string, ReactElement> = {\n    true: <FaVolumeUp />,\n    false: <FaVolumeMute />\n};\n\nexport const SOUND_TOOLTIP: Record<string, string> = {\n    true: 'Turn sound off',\n    false: 'Turn sound on'\n};\n\nexport const MUSIC_ICON: Record<string, ReactElement> = {\n    true: <FaMusic />,\n    false: <FaVolumeMute />\n};\n\nexport const MUSIC_TOOLTIP: Record<string, string> = {\n    true: 'Turn music off',\n    false: 'Turn music on'\n};\n\nexport interface SoundTrack {\n    id: number;\n\n    src: string;\n}\n","import {TETROMINOS_TYPES} from '../../engine/game-tetrominos';\n\nexport const rand = (max: number) => Math.floor(Math.random() * max);\n\nexport const range = (min: number, max: number) => rand(max - min) + min;\n\nexport const randTetro = () => TETROMINOS_TYPES[rand(TETROMINOS_TYPES.length)];\n\nexport const randTetros = (count: number) =>\n    Array(count).fill(null).map(randTetro);\n","import {TetrominosType} from './game-tetrominos';\n\nexport const GHOST_OPACITY = 0.2;\n\n/**\n * Defines a single block on the screen. If the type is undefined the cell is\n * empty.\n */\nexport interface GameCell {\n    ghost?: number;\n\n    glow?: boolean;\n\n    type?: TetrominosType;\n}\n\n/**\n * Defines coordinates to change a single block in the buffer.\n */\nexport interface GameCellPatch extends GameCell {\n    x: number;\n\n    y: number;\n}\n\n/**\n * Generates a collection of empty cells.\n */\nexport function* gameBufferCells(width: number): IterableIterator<GameCell> {\n    for (let i = 0; i < width; i++) {\n        yield {};\n    }\n}\n","import {gameBufferCells, GameCell} from './game-cell';\n\n/**\n * Defines a row across the screen.\n */\nexport interface GameRow {\n    cells: Array<GameCell>;\n\n    removed?: boolean;\n}\n\n/**\n * Generates an empty collection of rows.\n */\nexport function* gameBufferRows(\n    width: number,\n    height: number\n): IterableIterator<GameRow> {\n    for (let i = 0; i < height; i++) {\n        yield {cells: Array.from(gameBufferCells(width))};\n    }\n}\n","import {GameBuffer} from './game-buffer';\nimport {GameTransform} from './game-transform';\n\n/**\n * Checks if a coordinate is inside the buffer.\n */\nexport function gameCollideBuffer(\n    {width, height}: GameBuffer,\n    x: number,\n    y: number\n): boolean {\n    return x < 0 || x >= width || y < 0 || y >= height;\n}\n\n/**\n * Checks if a coordinate hits a block in the buffer.\n */\nexport function gameCollideBlock(\n    {rows}: GameBuffer,\n    x: number,\n    y: number\n): boolean {\n    return rows[y].cells[x].type !== undefined;\n}\n\n/**\n * Checks if the coordinates of a piece cause any collision.\n */\nexport function gameCollision(\n    {x, y, piece}: GameTransform,\n    buffer: GameBuffer\n): boolean {\n    for (let i = 0; i < piece.length; i++) {\n        const [offset_x, offset_y] = piece[i];\n        const trans_x = x + offset_x;\n        const trans_y = y + offset_y;\n        if (\n            gameCollideBuffer(buffer, trans_x, trans_y) ||\n            gameCollideBlock(buffer, trans_x, trans_y)\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n","import {\n    GAME_PIECES,\n    GamePiece,\n    GamePieceRotations,\n    GamePlayer\n} from './game-player';\n\n/**\n * Defines a piece after it's been transformed.\n */\nexport interface GameTransform {\n    piece: GamePiece;\n\n    rotate: number;\n\n    x: number;\n\n    y: number;\n}\n\n/**\n * Defines player directions they can move/rotate.\n */\nexport enum GamePlayerDirection {\n    LEFT = 'left',\n    RIGHT = 'right'\n}\n\n/**\n * Defines a function that can move a piece.\n */\nexport type GameTranslator = (p: [number, number]) => [number, number];\n\n/**\n * Defines a function that can rotate a piece.\n */\nexport type GameRotator = (\n    pieces: GamePieceRotations,\n    rotate: number\n) => number;\n\n/**\n * Moves a piece up.\n */\nexport const translateUp: GameTranslator = ([x, y]: [number, number]): [\n    number,\n    number\n] => [x, y - 1];\n\n/**\n * Moves a piece down.\n */\nexport const translateDown: GameTranslator = ([x, y]: [number, number]): [\n    number,\n    number\n] => [x, y + 1];\n\n/**\n * Moves a piece left.\n */\nexport const translateLeft: GameTranslator = ([x, y]: [number, number]): [\n    number,\n    number\n] => [x - 1, y];\n\n/**\n * Moves a piece right.\n */\nexport const translateRight: GameTranslator = ([x, y]: [number, number]): [\n    number,\n    number\n] => [x + 1, y];\n\n/**\n * Does not move a piece.\n */\nexport const translateNoop: GameTranslator = (\n    coords: [number, number]\n): [number, number] => coords;\n\n/**\n * Rotates a piece left.\n */\nexport const rotateLeft: GameRotator = (\n    pieces: GamePieceRotations,\n    rotate: number\n): number => {\n    return rotate === pieces.length - 1 ? 0 : rotate + 1;\n};\n\n/**\n * Rotates a piece right.\n */\nexport const rotateRight: GameRotator = (\n    pieces: GamePieceRotations,\n    rotate: number\n): number => {\n    return rotate === 0 ? pieces.length - 1 : rotate - 1;\n};\n\n/**\n * Does not rotate a piece.\n */\nexport const rotateNoop: GameRotator = (\n    pieces: GamePieceRotations,\n    rotate: number\n): number => {\n    return rotate;\n};\n\n/**\n * Maps to a translate function.\n */\nexport const translateDirection = {\n    [GamePlayerDirection.LEFT]: translateLeft,\n    [GamePlayerDirection.RIGHT]: translateRight\n};\n\n/**\n * Maps to a rotate function.\n */\nexport const rotateDirection = {\n    [GamePlayerDirection.LEFT]: rotateLeft,\n    [GamePlayerDirection.RIGHT]: rotateRight\n};\n\n/**\n * Transforms a game piece by applying a position and rotation translator.\n */\nexport function gameTransform(\n    {x, y, type, rotate}: GamePlayer,\n    trans: GameTranslator,\n    rot: GameRotator\n): GameTransform {\n    const pieces = GAME_PIECES[type];\n    const trans_rot = rot(pieces, rotate);\n    const [trans_x, trans_y] = trans([x, y]);\n    return {\n        x: trans_x,\n        y: trans_y,\n        piece: pieces[trans_rot],\n        rotate: trans_rot\n    };\n}\n","import {GameBuffer, gameBufferRowSolid} from './game-buffer';\nimport {gameCollision} from './game-collision';\nimport {\n    PIECE_I,\n    PIECE_J,\n    PIECE_L,\n    PIECE_O,\n    PIECE_S,\n    PIECE_T,\n    PIECE_Z\n} from './game-pieces';\nimport {GameRow} from './game-row';\nimport {TetrominosType} from './game-tetrominos';\nimport {GameRotator, gameTransform, GameTranslator} from './game-transform';\n\n/**\n * Defines a player piece with location.\n */\nexport interface GamePlayer {\n    rotate: number;\n\n    type: TetrominosType;\n\n    x: number;\n\n    y: number;\n}\n\n/**\n * Defines a ghost piece location.\n */\nexport type GameGhost = Pick<GamePlayer, 'x' | 'y'>;\n\n/**\n * An array from the GameDesigner.\n */\nexport type GamePiece = Array<[number, number]>;\n\n/**\n * A single game piece in different rotations.\n */\nexport type GamePieceRotations = Array<GamePiece>;\n\n/**\n * Map of game pieces grouped by their type.\n */\nexport const GAME_PIECES: Record<string, GamePieceRotations> = {\n    [TetrominosType.O]: PIECE_O,\n    [TetrominosType.I]: PIECE_I,\n    [TetrominosType.S]: PIECE_S,\n    [TetrominosType.Z]: PIECE_Z,\n    [TetrominosType.L]: PIECE_L,\n    [TetrominosType.J]: PIECE_J,\n    [TetrominosType.T]: PIECE_T\n};\n\n/**\n * Creates a player piece in the center of the buffer. Piece is positioned\n * as close as possible to the top of the buffer.\n */\nexport function gamePlayerCreate(\n    type: TetrominosType,\n    width: number\n): GamePlayer {\n    const piece = GAME_PIECES[type][0];\n    const y = piece.some(([offset_x, offset_y]) => offset_y < 0) ? 1 : 0;\n    return {\n        x: Math.floor(width / 2),\n        y,\n        type,\n        rotate: 0\n    };\n}\n\n/**\n * Bakes the player's piece into the buffer.\n */\nexport function gamePlayerDrop(\n    {x, y, type, rotate}: GamePlayer,\n    buffer: GameBuffer\n): 0 | 1 | 2 | 3 | 4 {\n    const piece = GAME_PIECES[type][rotate];\n    const rows = new Set<GameRow>();\n    for (let i = 0; i < piece.length; i++) {\n        const [offset_x, offset_y] = piece[i];\n        const row = buffer.rows[y + offset_y];\n        row.cells[x + offset_x] = {type};\n        rows.add(row);\n    }\n    let lines = 0;\n    rows.forEach((row) => {\n        if (gameBufferRowSolid(row)) {\n            row.removed = true;\n            lines++;\n        }\n    });\n    return lines as 0 | 1 | 2 | 3 | 4;\n}\n\n/**\n * Moves/rotates a player only if there is no collision.\n */\nexport function gamePlayerTransform(\n    buffer: GameBuffer,\n    player: GamePlayer,\n    translator: GameTranslator,\n    rotator: GameRotator\n) {\n    const trans = gameTransform(player, translator, rotator);\n    if (!gameCollision(trans, buffer)) {\n        player.rotate = trans.rotate;\n        player.x = trans.x;\n        player.y = trans.y;\n    }\n}\n","import {GamePieceRotations} from './game-player';\n\nexport const PIECE_O: GamePieceRotations = [\n    [\n        [-1, 0],\n        [0, 0],\n        [-1, 1],\n        [0, 1]\n    ]\n];\n\nexport const PIECE_I: GamePieceRotations = [\n    [\n        [-2, 0],\n        [-1, 0],\n        [0, 0],\n        [1, 0]\n    ],\n    [\n        [0, -1],\n        [0, 0],\n        [0, 1],\n        [0, 2]\n    ]\n];\n\nexport const PIECE_S: GamePieceRotations = [\n    [\n        [0, -1],\n        [0, 0],\n        [1, 0],\n        [1, 1]\n    ],\n    [\n        [0, 0],\n        [1, 0],\n        [-1, 1],\n        [0, 1]\n    ]\n];\n\nexport const PIECE_Z: GamePieceRotations = [\n    [\n        [1, -1],\n        [0, 0],\n        [1, 0],\n        [0, 1]\n    ],\n    [\n        [-1, 0],\n        [0, 0],\n        [0, 1],\n        [1, 1]\n    ]\n];\n\nexport const PIECE_L: GamePieceRotations = [\n    [\n        [1, -1],\n        [-1, 0],\n        [0, 0],\n        [1, 0]\n    ],\n    [\n        [-1, -1],\n        [0, -1],\n        [0, 0],\n        [0, 1]\n    ],\n    [\n        [-1, 0],\n        [0, 0],\n        [1, 0],\n        [-1, 1]\n    ],\n    [\n        [0, -1],\n        [0, 0],\n        [0, 1],\n        [1, 1]\n    ]\n];\n\nexport const PIECE_J: GamePieceRotations = [\n    [\n        [-1, -1],\n        [-1, 0],\n        [0, 0],\n        [1, 0]\n    ],\n    [\n        [0, -1],\n        [0, 0],\n        [-1, 1],\n        [0, 1]\n    ],\n    [\n        [-1, 0],\n        [0, 0],\n        [1, 0],\n        [1, 1]\n    ],\n    [\n        [0, -1],\n        [1, -1],\n        [0, 0],\n        [0, 1]\n    ]\n];\n\nexport const PIECE_T: GamePieceRotations = [\n    [\n        [0, -1],\n        [-1, 0],\n        [0, 0],\n        [1, 0]\n    ],\n    [\n        [0, -1],\n        [-1, 0],\n        [0, 0],\n        [0, 1]\n    ],\n    [\n        [-1, 0],\n        [0, 0],\n        [1, 0],\n        [0, 1]\n    ],\n    [\n        [0, -1],\n        [0, 0],\n        [1, 0],\n        [0, 1]\n    ]\n];\n","import {gameBufferCells, GameCellPatch} from './game-cell';\nimport {gameBufferRows, GameRow} from './game-row';\n\n/**\n * Defines the game memory for all the blocks that are locked into place.\n */\nexport interface GameBuffer {\n    height: number;\n\n    rows: Array<GameRow>;\n\n    width: number;\n}\n\n/**\n * Creates a buffer with empty cells.\n */\nexport function gameBufferEmpty(width: number, height: number): GameBuffer {\n    const rows = Array.from(gameBufferRows(width, height));\n    return {rows, width, height};\n}\n\n/**\n * Copies cells into a buffer.\n */\nexport function gameBufferPatch(buffer: GameBuffer, patch: GameCellPatch) {\n    const {x, y, ...cell} = patch;\n    buffer.rows[y].cells[x] = cell;\n}\n\n/**\n * True if the entire row is filled with blocks.\n */\nexport function gameBufferRowSolid({cells}: GameRow): boolean {\n    return cells.every((cell) => Boolean(cell.type));\n}\n\n/**\n * True if some of the row is has blocks.\n */\nexport function gameBufferRowSome({cells}: GameRow): boolean {\n    return cells.some((cell) => Boolean(cell.type));\n}\n\n/**\n * Counts how many solid blocks on a row.\n */\nexport function gameBufferRowCount({cells}: GameRow): number {\n    return cells.filter((cell) => Boolean(cell.type)).length;\n}\n\n/**\n * Finds the index of the first removed row. Returns -1 if none found.\n */\nexport function gameBufferFindRemoved({rows}: GameBuffer): number {\n    return rows.findIndex((row) => row.removed);\n}\n\n/**\n * Removes a row and inserts a blank at the top of the buffer.\n */\nexport function gameBufferRemoveRow({rows, width}: GameBuffer, indx: number) {\n    rows.splice(indx, 1);\n    rows.unshift({cells: Array.from(gameBufferCells(width))});\n}\n","import {GameBuffer} from './game-buffer';\nimport {gameCollision} from './game-collision';\nimport {GameGhost, GamePlayer} from './game-player';\nimport {gameTransform, rotateNoop, translateDown} from './game-transform';\n\n/**\n * Drops a piece to find the ghost location.\n */\nexport const gameGhost = (\n    buffer: GameBuffer,\n    {x, y, type, rotate}: GamePlayer\n): GameGhost | undefined => {\n    let ghost: GameGhost | undefined;\n    while (true) {\n        const trans = gameTransform(\n            {x: ghost?.x || x, y: ghost?.y || y, type, rotate},\n            translateDown,\n            rotateNoop\n        );\n        if (gameCollision(trans, buffer)) {\n            return ghost;\n        } else {\n            ghost = {x: trans.x, y: trans.y};\n        }\n    }\n};\n","import {randTetros} from '../components/particles/utilities.types';\nimport {GAME_INITIAL_STATE, GameModel} from '../store/game/game-model';\nimport {gameBufferEmpty} from './game-buffer';\n\nexport const BUFFER_WIDTH = 10;\n\nexport const BUFFER_HEIGHT = 20;\n\nexport const gameReset = (next_max: number): GameModel => {\n    const buffer = gameBufferEmpty(BUFFER_WIDTH, BUFFER_HEIGHT);\n    return {\n        ...GAME_INITIAL_STATE,\n        next: randTetros(next_max),\n        buffer: buffer,\n        screen: Array(buffer.width * buffer.height).fill({}),\n        level: 1,\n        score: 0,\n        player: undefined,\n        ghost: undefined\n    };\n};\n","import {SOUND_LEVEL, SOUND_SCORE} from '../components/particles/audio.types';\nimport {GameModel} from '../store/game/game-model';\nimport {GAME_PIECES, GamePiece} from './game-player';\nimport {TetrominosType} from './game-tetrominos';\n\nconst LEVEL_1_PER_LINE = {\n    1: (n: number) => 40,\n    2: (n: number) => 100,\n    3: (n: number) => 300,\n    4: (n: number) => 1200\n};\n\nconst LEVEL_2_PER_LINE = {\n    1: (n: number) => 80,\n    2: (n: number) => 200,\n    3: (n: number) => 600,\n    4: (n: number) => 2400\n};\n\nconst LEVEL_3_PER_LINE = {\n    1: (n: number) => 120,\n    2: (n: number) => 300,\n    3: (n: number) => 900,\n    4: (n: number) => 3600\n};\n\nconst LEVEL_N_PER_LINE = {\n    1: (n: number) => 40 * (n + 1),\n    2: (n: number) => 100 * (n + 1),\n    3: (n: number) => 300 * (n + 1),\n    4: (n: number) => 1200 * (n + 1)\n};\n\n/**\n * Calculates the score for lines cleared.\n */\nexport const gamePointsLines = (\n    level: number,\n    lines: 0 | 1 | 2 | 3 | 4\n): number => {\n    if (lines !== 0) {\n        if (level === 1) {\n            return LEVEL_1_PER_LINE[lines](level);\n        } else if (level === 2) {\n            return LEVEL_2_PER_LINE[lines](level);\n        } else if (level >= 3 && level < 10) {\n            return LEVEL_3_PER_LINE[lines](level);\n        } else if (level >= 10) {\n            return LEVEL_N_PER_LINE[lines](level);\n        }\n    }\n    return 0;\n};\n\n/**\n * Calculates the score for soft dropping a piece.\n */\nexport const gamePointsPiece = (piece: GamePiece): number => {\n    return piece.length;\n};\n\n/**\n * Calculates the score for landing a piece.\n */\nexport const gamePoints = (\n    level: number,\n    type: TetrominosType,\n    lines: 0 | 1 | 2 | 3 | 4\n): number => {\n    const lineScore = gamePointsLines(level, lines);\n    const pieceScore = gamePointsPiece(GAME_PIECES[type][0]);\n    return lineScore + pieceScore;\n};\n\nexport type GameScore = Pick<\n    GameModel,\n    | 'score'\n    | 'level'\n    | 'lines_level'\n    | 'lines_level_up'\n    | 'lines_total'\n    | 'player_freeze'\n>;\n\n/**\n * Computes the score and level changes for a collision.\n */\nexport const gameScore = (\n    state: GameScore,\n    type: TetrominosType,\n    lines: 0 | 1 | 2 | 3 | 4\n): string | undefined => {\n    state.score = state.score + gamePoints(state.level, type, lines!);\n    state.lines_level = state.lines_level + lines!;\n    if (state.lines_level >= state.lines_level_up) {\n        state.lines_total += state.lines_level;\n        state.lines_level = 0;\n        state.level++;\n        return SOUND_LEVEL;\n    }\n    if (!state.player_freeze) {\n        return SOUND_SCORE;\n    }\n};\n","import {GameBuffer} from './game-buffer';\nimport {GameCell, GHOST_OPACITY} from './game-cell';\nimport {GAME_PIECES, GameGhost, GamePlayer} from './game-player';\n\nconst MIN_GHOST = 0.05;\nconst MAX_GHOST = 0.2;\n\n/**\n * A flat collection of cells that makes rendering the screen quicker.\n */\nexport type GameScreen = Array<GameCell>;\n\n/**\n * Defines a function for a screen coordinate.\n */\nexport type GameScreenCoords = (x: number, y: number) => void;\n\n/**\n * Generates a flat array of cells and highlights cells that are part of a row\n * being removed.\n */\nexport function* gameScreenFlatten({\n    rows,\n    width,\n    height\n}: GameBuffer): IterableIterator<GameCell> {\n    for (let y = 0; y < height; y++) {\n        const {cells, removed: glow} = rows[y];\n        for (let x = 0; x < width; x++) {\n            yield {type: cells[x].type, glow};\n        }\n    }\n}\n\n/**\n * Renders the screen from a buffer and includes an optional player piece.\n */\nexport function gameScreenRender(\n    buffer: Readonly<GameBuffer>,\n    player?: Readonly<GamePlayer>,\n    ghost?: Readonly<GameGhost>,\n    streak_y?: number\n): GameScreen {\n    const {width} = buffer;\n    const screen = Array.from(gameScreenFlatten(buffer));\n    if (player) {\n        const writerGhost = gameScreenWriter(screen, width, (cell) => {\n            cell.type = player.type;\n            cell.ghost = GHOST_OPACITY;\n        });\n\n        const writerPlayer = gameScreenWriter(screen, width, (cell) => {\n            cell.type = player.type;\n            cell.ghost = undefined;\n        });\n\n        const dist = player!.y - streak_y!;\n        const percent = (y: number) => (y - streak_y!) / dist;\n        const writerDrop = gameScreenWriter(screen, width, (cell, x, y) => {\n            if (!cell.type) {\n                cell.type = player!.type;\n                cell.ghost = (MAX_GHOST - MIN_GHOST) * percent(y) + MIN_GHOST;\n            }\n        });\n\n        const piece = GAME_PIECES[player.type][player.rotate];\n\n        piece.forEach(([offset_x, offset_y]) => {\n            if (ghost) {\n                writerGhost(ghost.x + offset_x, ghost.y + offset_y);\n            }\n\n            writerPlayer(player.x + offset_x, player.y + offset_y);\n\n            if (streak_y !== undefined) {\n                for (let y = streak_y; y < player!.y; y++) {\n                    writerDrop(player!.x + offset_x, y + offset_y);\n                }\n            }\n        });\n    }\n    return screen;\n}\n\n/**\n * Creates a writer function that updates the screen.\n */\nexport function gameScreenWriter(\n    screen: GameScreen,\n    width: number,\n    write: (cell: GameCell, x: number, y: number) => void\n): GameScreenCoords {\n    return (x: number, y: number) => {\n        write(screen[y * width + x], x, y);\n    };\n}\n","import {GameModel} from '../store/game/game-model';\n\nexport type GameSound = Pick<GameModel, 'sound_tracks' | 'sound_id'>;\n\nexport const gameSound = (state: GameSound, src: string) => {\n    state.sound_tracks.push({\n        id: state.sound_id++,\n        src\n    });\n};\n","import {createAction} from '@reduxjs/toolkit';\nimport {GameBuffer} from '../../engine/game-buffer';\nimport {GameCellPatch} from '../../engine/game-cell';\nimport {GamePlayerDirection} from '../../engine/game-transform';\nimport {GAME_NAME, GameModel} from './game-model';\n\nexport namespace GameActions {\n    const prefix = (name: string) => `${GAME_NAME}/${name}`;\n\n    /**\n     * Toggles fast mode.\n     */\n    export const softDrop = createAction<boolean>(prefix('soft_drop'));\n\n    /**\n     * Performs a hard drop of the piece.\n     */\n    export const hardDrop = createAction(prefix('hard_drop'));\n\n    /**\n     * Starts a new game at a given level.\n     */\n    export const start = createAction<number>(prefix('start'));\n\n    /**\n     * Resumes running the game loop.\n     */\n    export const run = createAction(prefix('run'));\n\n    /**\n     * Pauses the game.\n     */\n    export const pause = createAction(prefix('pause'));\n\n    /**\n     * Resumes a paused game.\n     */\n    export const resume = createAction(prefix('resume'));\n\n    /**\n     * Quits the game.\n     */\n    export const quit = createAction(prefix('quit'));\n\n    /**\n     * Animation tick that moves game state forward.\n     */\n    export const tick = createAction(prefix('tick'));\n\n    /**\n     * Animation tick that moves game state forward.\n     */\n    export const finishing = createAction(prefix('finishing'));\n\n    /**\n     * Updates the screen with buffer changes.\n     */\n    export const render = createAction(prefix('render'));\n\n    /**\n     * Sets the current buffer.\n     * No width/height check is done.\n     */\n    export const bufferSet = createAction<GameBuffer>(prefix('bufferSet'));\n\n    /**\n     * Sets a buffer cell.\n     * For performance, no out of range check is done.\n     */\n    export const bufferPatch = createAction<Array<GameCellPatch>>(\n        prefix('bufferPatch')\n    );\n\n    /**\n     * Allows tests to externally modifying game state.\n     */\n    export const patch = createAction<Partial<GameModel>>(prefix('patch'));\n\n    /**\n     * Rotates the current piece.\n     */\n    export const rotate = createAction<GamePlayerDirection>(prefix('rotate'));\n\n    /**\n     * Moves the current piece towards left or right.\n     */\n    export const move = createAction<GamePlayerDirection>(prefix('move'));\n\n    /**\n     * Swaps a piece with the stash.\n     */\n    export const hold = createAction(prefix('hold'));\n\n    /**\n     * Removes a finished sound track from the play list.\n     */\n    export const soundTrack = createAction<number>(prefix('soundTrack'));\n\n    /**\n     * Sets the toast message.\n     */\n    export const toast = createAction<string | undefined>(prefix('toast'));\n}\n","import {ActionReducerMapBuilder, createSlice} from '@reduxjs/toolkit';\nimport ReactGA from 'react-ga';\nimport {\n    SOUND_DROP,\n    SOUND_FINISHED,\n    SOUND_LEVEL_10,\n    SOUND_SCORE\n} from '../../components/particles/audio.types';\nimport {randTetro} from '../../components/particles/utilities.types';\nimport {\n    gameBufferPatch,\n    gameBufferRowCount,\n    gameBufferRowSome\n} from '../../engine/game-buffer';\nimport {gameCollision} from '../../engine/game-collision';\nimport {gameGhost} from '../../engine/game-ghost';\nimport {gamePlayerCreate, gamePlayerTransform} from '../../engine/game-player';\nimport {gameReset} from '../../engine/game-reset';\nimport {gameScore} from '../../engine/game-score';\nimport {gameScreenRender} from '../../engine/game-screen';\nimport {gameSound} from '../../engine/game-sound';\nimport {\n    gameDropPlayer,\n    gameTickPlayer,\n    gameTickRows\n} from '../../engine/game-tick';\nimport {\n    GamePlayerDirection,\n    gameTransform,\n    rotateDirection,\n    rotateNoop,\n    translateDirection,\n    translateNoop\n} from '../../engine/game-transform';\nimport {SnapshotAction} from '../snapshot-middleware';\nimport {GameActions} from './game-actions';\nimport {\n    GAME_INITIAL_STATE,\n    GAME_NAME,\n    GameModel,\n    GameStatus\n} from './game-model';\n\nexport namespace GameState {\n    const track = (action: string, value?: number) => {\n        ReactGA.event({category: GAME_NAME, action, value});\n    };\n\n    export const slice = createSlice({\n        name: GAME_NAME,\n        initialState: GAME_INITIAL_STATE,\n        reducers: {},\n        extraReducers: (builder: ActionReducerMapBuilder<GameModel>) => {\n            builder\n                .addCase(GameActions.softDrop, (state, {payload}) => {\n                    state.soft_drop = payload;\n                })\n                .addCase(GameActions.start, (state, {payload}) => {\n                    track('start');\n                    const reset = gameReset(state.next_max);\n                    return {\n                        ...reset,\n                        level: payload,\n                        status: GameStatus.STARTING\n                    };\n                })\n                .addCase(GameActions.run, (state, action) => {\n                    state.status = GameStatus.RUNNING;\n                })\n                .addCase(GameActions.pause, (state, action) => {\n                    track('pause');\n                    state.status = GameStatus.PAUSED;\n                })\n                .addCase(GameActions.resume, (state, action) => {\n                    track('resume');\n                    state.status = GameStatus.STARTING;\n                })\n                .addCase(GameActions.quit, (state) => {\n                    track('quit');\n                    return gameReset(state.next_max);\n                })\n                .addCase(GameActions.render, (state, action) => {\n                    state.screen = gameScreenRender(\n                        state.buffer,\n                        state.player,\n                        state.ghost\n                    );\n                })\n                .addCase<SnapshotAction>(\n                    GameActions.tick,\n                    (state, {snapshot}) => {\n                        if (state.player) {\n                            const {collision, lines} = gameTickPlayer(\n                                state.buffer,\n                                state.player!\n                            );\n                            if (collision) {\n                                const old_level = state.level;\n                                const sound = gameScore(\n                                    state,\n                                    state.player.type,\n                                    lines!\n                                );\n                                if (\n                                    old_level !== state.level &&\n                                    state.level % 5 === 0\n                                ) {\n                                    state.toast_message = `Level ${state.level}`;\n                                    if (snapshot?.app.sound) {\n                                        gameSound(state, SOUND_LEVEL_10);\n                                    }\n                                }\n                                if (snapshot?.app.sound && sound) {\n                                    gameSound(state, sound);\n                                }\n                                state.player_freeze = false;\n                                state.hold_enable = true;\n                                state.player = undefined;\n                                state.ghost = undefined;\n                            } else {\n                                state.ghost = snapshot?.app.ghost_piece\n                                    ? gameGhost(state.buffer, state.player)\n                                    : undefined;\n                            }\n                        } else {\n                            if (!gameTickRows(state.buffer)) {\n                                const next = state.next.shift();\n                                if (state.next.length < state.next_max) {\n                                    state.next.push(randTetro());\n                                }\n                                const player = gamePlayerCreate(\n                                    next!,\n                                    state.buffer.width\n                                );\n                                const trans = gameTransform(\n                                    player,\n                                    translateNoop,\n                                    rotateNoop\n                                );\n                                if (gameCollision(trans, state.buffer)) {\n                                    snapshot?.app.sound &&\n                                        gameSound(state, SOUND_FINISHED);\n                                    state.restart_ticker++;\n                                    state.status = GameStatus.FINISHING;\n                                } else {\n                                    state.player = player;\n                                    state.ghost = snapshot?.app.ghost_piece\n                                        ? gameGhost(state.buffer, player)\n                                        : undefined;\n                                }\n                            }\n                        }\n                        state.screen = gameScreenRender(\n                            state.buffer,\n                            state.player,\n                            state.ghost\n                        );\n                    }\n                )\n                .addCase<SnapshotAction>(\n                    GameActions.finishing,\n                    (state, {snapshot}) => {\n                        const isRemoved = state.buffer.rows.find(\n                            (row) => row.removed\n                        );\n                        if (isRemoved) {\n                            state.score += gameBufferRowCount(isRemoved);\n                            gameTickRows(state.buffer);\n                        } else {\n                            const nextRow = state.buffer.rows.find((r) =>\n                                gameBufferRowSome(r)\n                            );\n                            if (nextRow) {\n                                nextRow.removed = true;\n                            } else {\n                                state.status = GameStatus.FINISHED;\n                            }\n                        }\n                        state.screen = gameScreenRender(\n                            state.buffer,\n                            state.player,\n                            state.ghost\n                        );\n                    }\n                )\n                .addCase<SnapshotAction>(\n                    GameActions.hardDrop,\n                    (state, {snapshot}) => {\n                        if (state.player && !state.player_freeze) {\n                            const origin_y = state.player.y;\n                            gameDropPlayer(state.buffer, state.player);\n                            state.restart_ticker++;\n                            state.screen = gameScreenRender(\n                                state.buffer,\n                                state.player,\n                                undefined,\n                                origin_y\n                            );\n                            state.player_freeze = true;\n                            state.ghost = undefined;\n                            if (snapshot?.app.sound) {\n                                gameSound(state, SOUND_DROP);\n                                gameSound(state, SOUND_SCORE);\n                            }\n                        }\n                    }\n                )\n                .addCase(GameActions.bufferSet, (state, {payload}) => {\n                    state.buffer = payload;\n                })\n                .addCase(GameActions.bufferPatch, (state, {payload}) => {\n                    payload.forEach((patch) =>\n                        gameBufferPatch(state.buffer, patch)\n                    );\n                })\n                .addCase<SnapshotAction<GamePlayerDirection>>(\n                    GameActions.rotate,\n                    (state, {payload, snapshot}) => {\n                        if (state.player && !state.player_freeze) {\n                            gamePlayerTransform(\n                                state.buffer,\n                                state.player,\n                                translateNoop,\n                                rotateDirection[payload]\n                            );\n                            state.ghost = snapshot?.app.ghost_piece\n                                ? gameGhost(state.buffer, state.player)\n                                : undefined;\n                            state.screen = gameScreenRender(\n                                state.buffer,\n                                state.player,\n                                state.ghost\n                            );\n                        }\n                    }\n                )\n                .addCase<SnapshotAction<GamePlayerDirection>>(\n                    GameActions.move,\n                    (state, {payload, snapshot}) => {\n                        if (state.player && !state.player_freeze) {\n                            gamePlayerTransform(\n                                state.buffer,\n                                state.player,\n                                translateDirection[payload],\n                                rotateNoop\n                            );\n                            state.ghost = snapshot?.app.ghost_piece\n                                ? gameGhost(state.buffer, state.player)\n                                : undefined;\n                            state.screen = gameScreenRender(\n                                state.buffer,\n                                state.player,\n                                state.ghost\n                            );\n                        }\n                    }\n                )\n                .addCase(GameActions.hold, (state) => {\n                    if (state.player) {\n                        if (state.hold) {\n                            state.next = [state.hold, ...state.next];\n                        }\n                        state.hold = state.player.type;\n                        state.hold_enable = false;\n                        state.player = undefined;\n                        state.ghost = undefined;\n                        state.restart_ticker++;\n                        state.screen = gameScreenRender(\n                            state.buffer,\n                            state.player,\n                            state.ghost\n                        );\n                    }\n                })\n                .addCase(GameActions.soundTrack, (state, {payload}) => {\n                    state.sound_tracks = state.sound_tracks.filter(\n                        ({id}) => id !== payload\n                    );\n                })\n                .addCase<SnapshotAction<Partial<GameModel>>>(\n                    GameActions.patch,\n                    (state, {payload, snapshot}) => {\n                        const ghost =\n                            snapshot?.app.ghost_piece && state.player\n                                ? gameGhost(state.buffer, state.player)\n                                : undefined;\n                        const screen = gameScreenRender(\n                            state.buffer,\n                            state.player,\n                            ghost\n                        );\n                        return {\n                            ...state,\n                            ...payload,\n                            ghost,\n                            screen\n                        };\n                    }\n                );\n        }\n    });\n}\n","import {\n    GameBuffer,\n    gameBufferFindRemoved,\n    gameBufferRemoveRow\n} from './game-buffer';\nimport {gameCollision} from './game-collision';\nimport {GamePlayer, gamePlayerDrop} from './game-player';\nimport {gameTransform, rotateNoop, translateDown} from './game-transform';\n\n/**\n * Results of moving the player's piece.\n */\nexport interface GameTickResult {\n    /**\n     * Was the piece dropped into the buffer?\n     */\n    collision: boolean;\n\n    /**\n     * (when collision is true) number of lines flagged for removal.\n     */\n    lines?: 0 | 1 | 2 | 3 | 4;\n}\n\n/**\n * Performs a single frame of animation of the player piece moving.\n */\nexport function gameTickPlayer(\n    buffer: GameBuffer,\n    player: GamePlayer\n): GameTickResult {\n    const trans = gameTransform(player, translateDown, rotateNoop);\n    if (gameCollision(trans, buffer)) {\n        const lines = gamePlayerDrop(player, buffer);\n        return {collision: true, lines};\n    }\n    player.y = trans.y;\n    return {collision: false};\n}\n\n/**\n * Drops the play down all the way until collision.\n */\nexport function gameDropPlayer(buffer: GameBuffer, player: GamePlayer) {\n    while (true) {\n        const trans = gameTransform(player, translateDown, rotateNoop);\n        if (gameCollision(trans, buffer)) {\n            break;\n        } else {\n            player.y = trans.y;\n        }\n    }\n}\n\n/**\n * Performs a single frame of animation of the rows collapsing down by gravity.\n */\nexport function gameTickRows(buffer: GameBuffer): boolean {\n    const removeIndex = gameBufferFindRemoved(buffer);\n    if (removeIndex === -1) {\n        return false;\n    }\n    gameBufferRemoveRow(buffer, removeIndex);\n    return true;\n}\n","import {combineReducers, Store} from '@reduxjs/toolkit';\nimport {Reducer} from 'redux';\nimport {loggerDebug} from '../components/particles/hooks/useLogger';\nimport {AppState} from './app/app-state';\nimport {GameState} from './game/game-state';\n\nexport const getRootReducer = () => {\n    return combineReducers({\n        app: AppState.slice.reducer,\n        game: GameState.slice.reducer\n    });\n};\n\nexport function acceptHotReload(store: Store, rootReducer: Reducer) {\n    if (process.env.NODE_ENV !== 'production' && module.hot) {\n        const log = loggerDebug(acceptHotReload.name);\n        log('enabled');\n        module.hot.accept(\n            ['./app/app-state', './game/game-state'],\n            (updatedDependencies) => {\n                log(updatedDependencies);\n                store.replaceReducer(rootReducer);\n            }\n        );\n    }\n}\n","import {configureStore} from '@reduxjs/toolkit';\nimport {useDispatch} from 'react-redux';\nimport {environment} from '../environment/environment';\nimport {SnapShotMiddleware} from './snapshot-middleware';\nimport {acceptHotReload, getRootReducer} from './root-reducer';\n\n/**\n * Configures the Redux store with a default state.\n */\nexport const configureAppStore = (preloadedState = {}) => {\n    const rootReducer = getRootReducer();\n\n    const store = configureStore({\n        devTools: {\n            name: environment.brandName,\n            maxAge: 100\n        },\n        preloadedState,\n        reducer: rootReducer,\n        middleware: (getDefaultMiddleware) => {\n            return [...getDefaultMiddleware(), SnapShotMiddleware];\n        }\n    });\n\n    acceptHotReload(store, rootReducer);\n\n    return store;\n};\n\n/**\n * The combined reducers create a complex Redux store type. So we create a\n * variable that TypeScript can use to extra rich types about the store.\n */\nlet appStore: ReturnType<typeof configureAppStore>;\n\nexport type AppStore = ReturnType<typeof configureAppStore>;\n\n/**\n * Contains the type for the root state that holds all the reducers.\n */\nexport type AppState = ReturnType<typeof appStore.getState>;\n\n/**\n * Types of dispatches including middleware.\n */\nexport type AppDispatch = typeof appStore.dispatch;\n\n/**\n * Creates a dispatch function that returns proper typing for async Trunk\n * actions.\n */\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\n/**\n * Defines a store configure function after types are declared. This allows\n * the function to have typing for the state parameter.\n */\nexport const getAppStore = (state?: AppState) => configureAppStore(state);\n","import {Tooltip} from '@material-ui/core';\nimport classNames from 'classnames';\nimport {ButtonHTMLAttributes, FC, useMemo, useRef} from 'react';\nimport {useUiTheme} from '../contexts/UiThemeContext';\nimport {ClassNameProps} from '../particles.types';\nimport './UiButton.css';\n\nexport enum UiButtonShape {\n    NORMAL,\n    ROUND,\n    LEFT,\n    RIGHT,\n    UP,\n    DOWN\n}\n\nexport interface UiButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    active?: boolean;\n\n    onPress?: () => void;\n\n    onRelease?: () => void;\n\n    preventFocus?: boolean;\n\n    primary?: boolean;\n\n    secondary?: boolean;\n\n    shape?: UiButtonShape;\n\n    toolTip?: string;\n}\n\nexport const UiButton: FC<UiButtonProps & ClassNameProps> = ({\n    active,\n    disabled,\n    preventFocus,\n    primary,\n    secondary,\n    toolTip,\n    shape = UiButtonShape.NORMAL,\n    className,\n    children,\n    onMouseDown,\n    onMouseUp,\n    onPress,\n    onRelease,\n    ...props\n}) => {\n    const touching = useRef(false);\n    const pressing = useRef(false);\n    const {transparent} = useUiTheme();\n    const classes = useMemo(() => {\n        return classNames(className, 'ui-button', {\n            'ui-button-standard': !transparent,\n            'ui-button-trans': transparent,\n            'ui-shape-round': shape === UiButtonShape.ROUND,\n            'ui-shape-normal': shape === UiButtonShape.NORMAL,\n            'ui-shape-left': shape === UiButtonShape.LEFT,\n            'ui-shape-right': shape === UiButtonShape.RIGHT,\n            'ui-shape-up': shape === UiButtonShape.UP,\n            'ui-shape-down': shape === UiButtonShape.DOWN,\n            'text-primary': primary,\n            'text-secondary': secondary,\n            active\n        });\n    }, [active, primary, secondary, shape, transparent, className]);\n    return (\n        <Tooltip title={toolTip || ''}>\n            <button\n                className={classes}\n                disabled={disabled}\n                onTouchStart={() => {\n                    touching.current = true;\n                    if (!disabled) {\n                        pressing.current = true;\n                        onPress && onPress();\n                    }\n                }}\n                onTouchEnd={() => {\n                    pressing.current = false;\n                    onRelease && onRelease();\n                }}\n                onMouseDown={(e) => {\n                    if (preventFocus) {\n                        e.preventDefault();\n                    }\n                    if (!touching.current && !disabled) {\n                        pressing.current = true;\n                        onPress && onPress();\n                    }\n                }}\n                onMouseUp={(e) => {\n                    if (!touching.current) {\n                        pressing.current = false;\n                        onRelease && onRelease();\n                    }\n                }}\n                onMouseLeave={(e) => {\n                    if (!touching.current && pressing.current) {\n                        pressing.current = false;\n                        onRelease && onRelease();\n                    }\n                }}\n                {...props}\n            >\n                {children}\n            </button>\n        </Tooltip>\n    );\n};\n","import {Dialog, useMediaQuery} from '@material-ui/core';\nimport classNames from 'classnames';\nimport {FC, useMemo} from 'react';\nimport {FaArrowLeft} from 'react-icons/fa';\nimport {useModalView} from '../hooks/useModalView';\nimport {ClassNameProps} from '../particles.types';\nimport './UiDialog.css';\n\nexport interface UiDialogProps {\n    large?: boolean;\n\n    onClose?: () => void;\n\n    open: boolean;\n\n    title: string;\n}\n\nexport const UiDialog: FC<UiDialogProps & ClassNameProps> = ({\n    onClose = () => null,\n    open,\n    title,\n    large,\n    children,\n    className\n}) => {\n    const smallScreen = useMediaQuery('(max-width:375px)');\n    const fullScreen = useMemo(\n        () => large && smallScreen,\n        [large, smallScreen]\n    );\n\n    useModalView(open, title);\n\n    return (\n        <Dialog\n            className={classNames('ui-dialog', {fullScreen})}\n            PaperProps={{\n                className: classNames('ui-dialog-paper', className, {\n                    'border-primary': !fullScreen,\n                    fullScreen\n                })\n            }}\n            open={open}\n            onClose={onClose}\n            fullScreen={fullScreen}\n        >\n            <div className=\"ui-dialog-title text-primary\">\n                {title}\n                {large && (\n                    <button\n                        className=\"ml:hidden flex absolute top-0 -left-3 p-3 dark:text-white text-black text-sm\"\n                        onClick={onClose}\n                    >\n                        <FaArrowLeft />\n                    </button>\n                )}\n            </div>\n            <div className=\"flex flex-col\">{children}</div>\n        </Dialog>\n    );\n};\n","import {useEffect} from 'react';\nimport ReactGA from 'react-ga';\nimport {toKebabCase} from '../strings.types';\n\nexport const useModalView = (open: boolean, title: string) => {\n    useEffect(() => {\n        if (open) {\n            ReactGA.modalview(toKebabCase(title));\n        }\n    }, [open, title]);\n};\n","/**\n * \"document_id\" -> \"document id\"\n * \"documentId\" -> \"document id\"\n */\nexport const toSpaces = (str: string): string =>\n    str && str.replace(/[-_]/g, ' ').replace(/([A-Z])/g, ' $1');\n\n/**\n * \"Hello World\" -> \"hello-world\"\n */\nexport const toKebabCase = (str: string): string =>\n    str &&\n    str\n        .match(\n            /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g\n        )!\n        .map((x) => x.toLowerCase())\n        .join('-');\n","import {PayloadAction} from '@reduxjs/toolkit';\nimport {FC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {AppActions} from '../../../store/app/app-actions';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {UiDialog} from '../../particles/ui/UiDialog';\n\nexport interface AppDialogControl {\n    closeAction?: PayloadAction<any>;\n\n    selectOpen: any;\n}\n\nexport interface AppDialogProps {\n    large?: boolean;\n\n    title: string;\n}\n\nexport const AppDialog: FC<AppDialogProps & AppDialogControl & ClassNameProps> =\n    ({\n        closeAction = AppActions.close(),\n        selectOpen,\n        title,\n        large,\n        children,\n        className\n    }) => {\n        const dispatch = useAppDispatch();\n        const open = useSelector(selectOpen);\n        return (\n            <UiDialog\n                className={className}\n                open={Boolean(open)}\n                title={title}\n                large={large}\n                onClose={() => dispatch(closeAction)}\n            >\n                {children}\n            </UiDialog>\n        );\n    };\n","import classNames from 'classnames';\nimport {FC} from 'react';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface GameCredit {\n    desc: string;\n\n    title: string;\n\n    url: string;\n}\n\nexport interface GameCreditsProps {\n    credits: Array<GameCredit>;\n}\n\nexport const GameCredits: FC<GameCreditsProps & ClassNameProps> = ({\n    credits,\n    className\n}) => {\n    return (\n        <div className={classNames(className, 'flex flex-col text-xs -mb-3')}>\n            {credits.map(({title, desc, url}, indx) => (\n                <div className=\"flex flex-col mb-3\" key={indx}>\n                    <div>{title}:</div>\n                    <a href={url} className=\"text-primary hover:underline\">\n                        {desc}\n                    </a>\n                </div>\n            ))}\n        </div>\n    );\n};\n","import {FC} from 'react';\nimport {environment} from '../../../environment/environment';\nimport {AppDialogType} from '../../../store/app/app-model';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {AppDialog, AppDialogControl} from '../../molecules/app/AppDialog';\nimport {GameCredit, GameCredits} from '../../molecules/game/GameCredits';\n\nconst gameCredits: Array<GameCredit> = [\n    {\n        title: 'UX Design by',\n        desc: 'Zayn Assalam',\n        url: 'https://dribbble.com/shots/14684127-Tetris-Mobile-App'\n    },\n    {\n        title: 'Programmed by',\n        desc: 'Nick Foscarini',\n        url: 'https://www.linkedin.com/in/nick-foscarini/'\n    },\n    {\n        title: 'Built with',\n        desc: 'ReactJS',\n        url: 'https://reactjs.org/'\n    },\n    {\n        title: 'States managed by',\n        desc: 'Redux Toolkit',\n        url: 'https://redux-toolkit.js.org/'\n    },\n    {\n        title: 'Styled with',\n        desc: 'tailwindcss',\n        url: 'https://tailwindcss.com/'\n    },\n    {\n        title: 'Source code',\n        desc: 'GitHub',\n        url: environment.github\n    }\n];\n\nexport const CreditsDialog: FC<Partial<AppDialogControl>> = ({\n    selectOpen = AppSelectors.isOpen(AppDialogType.CREDITS)\n}) => {\n    return (\n        <AppDialog\n            className=\"max-w-[12rem]\"\n            title=\"Credits\"\n            selectOpen={selectOpen}\n        >\n            <GameCredits credits={gameCredits} />\n        </AppDialog>\n    );\n};\n","import {createContext, FC, useContext, useMemo} from 'react';\n\nexport interface UiTheme {\n    large: boolean;\n\n    transparent: boolean;\n}\n\nconst UiThemeContext = createContext<UiTheme>({\n    transparent: false,\n    large: false\n});\n\nexport const useUiTheme = () => useContext(UiThemeContext);\n\nexport const UiThemeProvider: FC<UiTheme> = ({\n    transparent,\n    large,\n    children\n}) => {\n    const value = useMemo(() => ({transparent, large}), [transparent, large]);\n    return (\n        <UiThemeContext.Provider value={value}>\n            {children}\n        </UiThemeContext.Provider>\n    );\n};\n","import {PayloadAction} from '@reduxjs/toolkit';\nimport classNames from 'classnames';\nimport React, {FC, ReactElement} from 'react';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {UiButton} from '../../particles/ui/UiButton';\n\nexport interface AppBarTool {\n    action: PayloadAction<any>;\n\n    active?: boolean;\n\n    icon: ReactElement;\n\n    toolTip: string;\n}\n\nexport interface AppBarProps {\n    tools: Array<AppBarTool>;\n}\n\nexport const AppBar: FC<AppBarProps & ClassNameProps> = ({\n    tools,\n    className\n}) => {\n    const dispatch = useAppDispatch();\n    return (\n        <div className={classNames(className, 'flex justify-between w-full')}>\n            {tools.map(({icon, toolTip, active, action}, indx) => (\n                <UiButton\n                    key={indx}\n                    className=\"rounded-full text-[12px] p-2\"\n                    primary={true}\n                    active={active}\n                    onClick={() => dispatch(action)}\n                    toolTip={toolTip}\n                >\n                    {icon}\n                </UiButton>\n            ))}\n        </div>\n    );\n};\n","import classNames from 'classnames';\nimport {FC, useMemo} from 'react';\nimport {useMaxDigits} from '../../particles/hooks/useMaxDigits';\nimport {useSpaces} from '../../particles/hooks/useSpaces';\nimport {useZeros} from '../../particles/hooks/useZeros';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface GameDigitsProps {\n    digits: number;\n\n    primary?: boolean;\n\n    value: number;\n}\n\nexport const GameDigits: FC<GameDigitsProps & ClassNameProps> = ({\n    value,\n    digits,\n    primary = true,\n    className\n}) => {\n    const zeros = useZeros(digits);\n    const maxDigits = useMaxDigits(value, digits);\n    const spaces = useSpaces(digits - maxDigits.length);\n    const color = useMemo(\n        () => ({\n            'text-primary': primary,\n            'text-secondary': !primary\n        }),\n        [primary]\n    );\n\n    return (\n        <div\n            className={classNames(\n                className,\n                'flex relative leading-none font-digits p-2'\n            )}\n        >\n            <div className=\"relative mx-auto\">\n                <div className={classNames('opacity-20', color)}>{zeros}</div>\n                <div className={classNames('absolute top-0 left-0', color)}>\n                    <span dangerouslySetInnerHTML={spaces} />\n                    <span>{maxDigits}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import {useMemo} from 'react';\n\nexport const useSpaces = (\n    length: number\n): {\n    __html: string;\n} => {\n    return useMemo(() => ({__html: '&nbsp;'.repeat(length)}), [length]);\n};\n","import {useMemo} from 'react';\n\n/**\n * Returns a string filled with 0s.\n */\nexport const useZeros = (digits: number) => {\n    return useMemo(() => '0'.repeat(digits), [digits]);\n};\n","import {useMemo} from 'react';\n\n/**\n * Returns a number as a string with a max number of digits. Rendering\n * 9s if the number is too large.\n */\nexport const useMaxDigits = (value: number, maxDigits: number) => {\n    return useMemo(() => {\n        const str = value.toString();\n        return str.length > maxDigits ? '9'.repeat(maxDigits) : str;\n    }, [value, maxDigits]);\n};\n","import classNames from 'classnames';\nimport {FC} from 'react';\nimport {GameDigits} from '../../atoms/game/GameDigits';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface GameScoreProps {\n    rank: number;\n\n    score: number;\n}\n\nexport const GameScore: FC<GameScoreProps & ClassNameProps> = ({\n    rank,\n    score,\n    className\n}) => {\n    return (\n        <div\n            className={classNames(\n                className,\n                'flex font-mono items-baseline space-x-4'\n            )}\n        >\n            <div className=\"text-light\">#{rank}</div>\n            <GameDigits digits={6} value={score} />\n        </div>\n    );\n};\n","import {PayloadAction} from '@reduxjs/toolkit';\nimport classNames from 'classnames';\nimport {FC, useEffect, useMemo} from 'react';\nimport {FaHome} from 'react-icons/fa';\nimport {GiPodium} from 'react-icons/gi';\nimport {VscDebugRestart} from 'react-icons/vsc';\nimport {useSelector} from 'react-redux';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {AppActions} from '../../../store/app/app-actions';\nimport {AppDialogType} from '../../../store/app/app-model';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {GameActions} from '../../../store/game/game-actions';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {AppBar} from '../../atoms/app/AppBar';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {GameScore} from './GameScore';\n\nexport interface GameFinishProps {\n    actionHighScores?: PayloadAction;\n\n    actionHome?: PayloadAction;\n\n    actionRestart?: PayloadAction<number>;\n}\n\nexport const GameFinish: FC<GameFinishProps & ClassNameProps> = ({\n    actionHome = GameActions.quit(),\n    actionRestart = GameActions.start(1),\n    actionHighScores = AppActions.open(AppDialogType.HIGH_SCORES),\n    className\n}) => {\n    const score = useSelector(GameSelectors.score);\n    const highScores = useSelector(AppSelectors.highScores);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        dispatch(AppActions.recordScore(score));\n    }, [dispatch, score]);\n\n    const tools = useMemo(() => {\n        return [\n            {\n                icon: <FaHome />,\n                toolTip: 'Home',\n                action: actionHome\n            },\n            {\n                icon: <VscDebugRestart />,\n                toolTip: 'Restart',\n                action: actionRestart\n            },\n            {\n                icon: <GiPodium />,\n                toolTip: 'High Scores',\n                action: actionHighScores\n            }\n        ];\n    }, [actionHome, actionRestart, actionHighScores]);\n\n    const rank = useMemo(() => {\n        return highScores.indexOf(score) + 1;\n    }, [highScores, score]);\n\n    return (\n        <div className={classNames(className, 'flex flex-col text-2xl')}>\n            <div className=\"flex flex-col ml-auto mr-auto\">\n                <div className=\"font-mono text-center\">Your Score</div>\n                <GameScore rank={rank} score={score} />\n                <div className=\"font-mono text-center mt-5\">Your Best</div>\n                <GameScore rank={1} score={highScores[0] || 0} />\n            </div>\n            <AppBar className=\"mt-5\" tools={tools} />\n        </div>\n    );\n};\n","import {FC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {GameActions} from '../../../store/game/game-actions';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {AppDialog, AppDialogControl} from '../../molecules/app/AppDialog';\nimport {GameFinish} from '../../molecules/game/GameFinish';\n\nexport interface FinishDialogProps {\n    selectStart?: () => number;\n}\n\nexport const FinishDialog: FC<FinishDialogProps & Partial<AppDialogControl>> =\n    ({\n        selectStart = AppSelectors.startLevel,\n        selectOpen = GameSelectors.finished\n    }) => {\n        const level = useSelector(selectStart);\n        return (\n            <AppDialog\n                className=\"max-w-[12rem]\"\n                title=\"Game Over\"\n                selectOpen={selectOpen}\n            >\n                <GameFinish actionRestart={GameActions.start(level)} />\n            </AppDialog>\n        );\n    };\n","import classNames from 'classnames';\nimport {FC, useMemo} from 'react';\nimport {useSelector} from 'react-redux';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {GameScore} from './GameScore';\n\nexport interface GameHighScoresProps {\n    selectScores?: any;\n}\n\nexport const GameHighScores: FC<GameHighScoresProps & ClassNameProps> = ({\n    selectScores = AppSelectors.highScores,\n    className\n}) => {\n    const highScores: Array<number> = useSelector(selectScores);\n    const scores = useMemo(() => {\n        return [...(highScores || []), ...Array(10).fill(0)].slice(0, 9);\n    }, [highScores]);\n    return (\n        <div className={classNames(className, 'flex flex-col text-2xl')}>\n            {scores.map((score, indx) => (\n                <GameScore key={indx} rank={indx + 1} score={score} />\n            ))}\n        </div>\n    );\n};\n","import {FC} from 'react';\nimport {AppDialogType} from '../../../store/app/app-model';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {AppDialog, AppDialogControl} from '../../molecules/app/AppDialog';\nimport {GameHighScores} from '../../molecules/game/GameHighScores';\n\nexport const HighScoresDialog: FC<Partial<AppDialogControl>> = ({\n    selectOpen = AppSelectors.isOpen(AppDialogType.HIGH_SCORES)\n}) => {\n    return (\n        <AppDialog\n            className=\"max-w-[12rem]\"\n            title=\"High Scores\"\n            selectOpen={selectOpen}\n        >\n            <GameHighScores className=\"ml-auto mr-auto\" />\n        </AppDialog>\n    );\n};\n","import classNames from 'classnames';\nimport {FC} from 'react';\nimport {FaGithub} from 'react-icons/fa';\nimport {environment} from '../../../environment/environment';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport const AppCopyright: FC<ClassNameProps> = ({className}) => {\n    return (\n        <div className={classNames(className, 'flex text-xs space-x-2')}>\n            <div>Version {environment.version}</div>\n            <a\n                href={environment.github}\n                className=\"flex text-primary hover:underline items-center space-x-1\"\n            >\n                <FaGithub />\n                <span>Source</span>\n            </a>\n        </div>\n    );\n};\n","import classNames from 'classnames';\nimport {cloneElement, FC, ReactElement, useMemo} from 'react';\nimport {FaCheck, FaTimes} from 'react-icons/fa';\nimport {ClassNameProps} from '../particles.types';\n\nexport interface UiToggleProps {\n    iconOff?: ReactElement;\n\n    iconOn?: ReactElement;\n\n    onChange: (value: boolean) => void;\n\n    value: boolean;\n}\n\nexport const UiToggle: FC<UiToggleProps & ClassNameProps> = ({\n    value,\n    onChange,\n    iconOn,\n    iconOff,\n    className\n}) => {\n    const cloneOn = useMemo(() => {\n        const icon = iconOn || <FaCheck className=\"text-green-200\" />;\n        return cloneElement(icon, {\n            className: `text-[24px] mr-1 ${icon.props.className}`\n        });\n    }, [iconOn]);\n\n    const cloneOff = useMemo(() => {\n        const icon = iconOff || <FaTimes className=\"text-red-500\" />;\n        return cloneElement(icon, {\n            className: `text-[24px] ${icon.props.className}`\n        });\n    }, [iconOff]);\n\n    return (\n        <div\n            className={classNames(\n                className,\n                'flex relative p-1 text-[26px] h-[26px] w-[50px] bg-black rounded-full cursor-pointer items-center justify-between'\n            )}\n            onClick={() => onChange(!value)}\n        >\n            {cloneOn}\n            {cloneOff}\n            <div\n                className={classNames(\n                    'bg-white rounded-full absolute top-[2px] left-[2px] h-[22px] w-[22px] transition-transform transform translate-x-0',\n                    {'translate-x-[24px]': Boolean(value)}\n                )}\n            />\n        </div>\n    );\n};\n","import {FC} from 'react';\nimport {FaMoon, FaSun} from 'react-icons/fa';\nimport {useSelector} from 'react-redux';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {AppActions} from '../../../store/app/app-actions';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {UiToggle} from '../../particles/ui/UiToggle';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface AppDarkModeProps {\n    selectDark?: () => boolean;\n}\n\nexport const AppDarkMode: FC<AppDarkModeProps & ClassNameProps> = ({\n    selectDark = AppSelectors.dark,\n    className\n}) => {\n    const dark = useSelector(selectDark);\n    const dispatch = useAppDispatch();\n    return (\n        <UiToggle\n            className={className}\n            onChange={(value) => dispatch(AppActions.dark(value))}\n            value={dark}\n            iconOn={<FaMoon className=\"text-blue-200\" />}\n            iconOff={<FaSun className=\"text-yellow-500\" />}\n        />\n    );\n};\n","import {useCallback, useMemo} from 'react';\nimport {UiButton} from './UiButton';\n\nexport interface UiOption<TType> {\n    label: string;\n\n    value: TType;\n}\n\nexport interface UiSelectProps<TType> {\n    onChange: (value: TType) => void;\n\n    options: Array<UiOption<TType>>;\n\n    value: TType;\n}\n\nexport function UiSelect<TType>({\n    onChange,\n    options,\n    value\n}: UiSelectProps<TType>) {\n    const indx = useMemo(\n        () => options.findIndex((option) => option.value === value),\n        [value, options]\n    );\n\n    const increase = useCallback(() => {\n        const i = Math.min(options.length - 1, indx + 1);\n        onChange(options[i].value);\n    }, [onChange, options, indx]);\n\n    const decrease = useCallback(() => {\n        const i = Math.max(0, indx - 1);\n        onChange(options[i].value);\n    }, [onChange, options, indx]);\n\n    return (\n        <div className=\"flex\">\n            <UiButton className=\"px-4\" onClick={decrease} disabled={indx <= 0}>\n                -\n            </UiButton>\n            <div className=\"flex-grow text-center\">{options[indx]?.label}</div>\n            <UiButton\n                className=\"px-4\"\n                onClick={increase}\n                disabled={indx >= options.length - 1}\n            >\n                +\n            </UiButton>\n        </div>\n    );\n}\n","import React, {FC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {AppActions} from '../../../store/app/app-actions';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {\n    MUSIC_ICON,\n    MUSIC_TYPES,\n    SOUND_ICON,\n    VOLUME_OPTIONS\n} from '../../particles/audio.types';\nimport {UiButton} from '../../particles/ui/UiButton';\nimport {UiSelect} from '../../particles/ui/UiSelect';\n\nexport const OptionsAudio: FC = () => {\n    const music = useSelector(AppSelectors.music);\n    const musicType = useSelector(AppSelectors.musicType);\n    const musicVolume = useSelector(AppSelectors.musicVolume);\n    const sound = useSelector(AppSelectors.sound);\n    const soundVolume = useSelector(AppSelectors.soundVolume);\n    const dispatch = useAppDispatch();\n    return (\n        <>\n            <div>Sound Fx</div>\n            <UiButton\n                className=\"flex rounded-full text-[12px] p-2 justify-center\"\n                active={sound}\n                onClick={() => dispatch(AppActions.sound())}\n            >\n                {SOUND_ICON[sound.toString()]}\n            </UiButton>\n            <div>Sound Fx Volume</div>\n            <UiSelect\n                options={VOLUME_OPTIONS}\n                value={soundVolume}\n                onChange={(value) => dispatch(AppActions.soundVolume(value))}\n            />\n            <div>Music</div>\n            <UiButton\n                className=\"flex rounded-full text-[12px] p-2 justify-center\"\n                active={music}\n                onClick={() => dispatch(AppActions.music())}\n            >\n                {MUSIC_ICON[music.toString()]}\n            </UiButton>\n            <div>Music Volume</div>\n            <UiSelect\n                options={VOLUME_OPTIONS}\n                value={musicVolume}\n                onChange={(value) => dispatch(AppActions.musicVolume(value))}\n            />\n            <div>Music Type</div>\n            <UiSelect\n                options={MUSIC_TYPES}\n                value={musicType}\n                onChange={(value) => dispatch(AppActions.musicType(value))}\n            />\n        </>\n    );\n};\n","import React, {FC} from 'react';\nimport {FaCheck, FaTimes} from 'react-icons/fa';\nimport {useSelector} from 'react-redux';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {AppActions} from '../../../store/app/app-actions';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {UiButton} from '../../particles/ui/UiButton';\n\nexport const OptionsGame: FC = () => {\n    const ghostPiece = useSelector(AppSelectors.ghostPiece);\n    const dispatch = useAppDispatch();\n    return (\n        <>\n            <div>Ghost Piece</div>\n            <UiButton\n                className=\"flex rounded-full text-[12px] p-2 justify-center\"\n                active={ghostPiece}\n                onClick={() => dispatch(AppActions.ghostPiece())}\n            >\n                {ghostPiece ? <FaCheck /> : <FaTimes />}\n            </UiButton>\n        </>\n    );\n};\n","import {FC, useMemo} from 'react';\nimport {toSpaces} from '../../particles/strings.types';\nimport {UiButton} from '../../particles/ui/UiButton';\n\nconst CODE_PREFIXES = ['Digit', 'Key', 'Arrow'];\n\nexport interface AppKeyBindingProps {\n    keyCode: string;\n\n    label: string;\n\n    onClick: () => void;\n}\n\nexport const AppKeyBinding: FC<AppKeyBindingProps> = ({\n    label,\n    keyCode,\n    onClick\n}) => {\n    const str = useMemo(() => {\n        const code = CODE_PREFIXES.reduce((str, prefix) => {\n            return str.replace(prefix, '').trim();\n        }, keyCode);\n        return toSpaces(code);\n    }, [keyCode]);\n\n    return (\n        <>\n            <div>{label}</div>\n            <UiButton className=\"w-full\" onClick={onClick}>\n                {str}\n            </UiButton>\n        </>\n    );\n};\n","import {FC, useEffect} from 'react';\nimport {\n    KEY_BINDING_LABELS,\n    KeyBindings\n} from '../../particles/key_bindings.types';\n\nexport interface AppKeyPickerProps {\n    keyOf: keyof KeyBindings;\n\n    onChange: (code: string) => void;\n}\n\nexport const AppKeyPicker: FC<AppKeyPickerProps> = ({keyOf, onChange}) => {\n    useEffect(() => {\n        const listener = ({code}: KeyboardEvent) => onChange(code);\n        document.addEventListener('keydown', listener, {once: true});\n        return () => document.removeEventListener('keydown', listener);\n    });\n\n    return (\n        <div className=\"text-2xl font-bold text-center w-full uppercase\">\n            {KEY_BINDING_LABELS[keyOf]}\n        </div>\n    );\n};\n","import {ActionCreatorWithPayload} from '@reduxjs/toolkit';\nimport {FC, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {AppActions} from '../../../store/app/app-actions';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {AppKeyBinding} from '../../atoms/app/AppKeyBinding';\nimport {useLogger} from '../../particles/hooks/useLogger';\nimport {\n    KEY_BINDING_LABELS,\n    KEY_BINDINGS,\n    KeyBindings\n} from '../../particles/key_bindings.types';\nimport {UiButton} from '../../particles/ui/UiButton';\nimport {UiDialog} from '../../particles/ui/UiDialog';\nimport {AppKeyPicker} from '../app/AppKeyPicker';\n\nexport interface OptionsKeyBindingsProps {\n    actionKeys?: ActionCreatorWithPayload<Partial<KeyBindings>>;\n\n    selectKeys?: () => KeyBindings;\n}\n\nexport const OptionsKeyBindings: FC<OptionsKeyBindingsProps> = ({\n    selectKeys = AppSelectors.keys,\n    actionKeys = AppActions.keys\n}) => {\n    const [pickKey, setPickKey] = useState<keyof KeyBindings | undefined>();\n    const keys = useSelector(selectKeys);\n    const dispatch = useAppDispatch();\n    const log = useLogger(OptionsKeyBindings.name);\n    return (\n        <>\n            {KEY_BINDINGS.map((keyOf, indx) => (\n                <AppKeyBinding\n                    key={indx}\n                    keyCode={keys[keyOf]}\n                    label={KEY_BINDING_LABELS[keyOf]}\n                    onClick={() => setPickKey(keyOf)}\n                />\n            ))}\n            <UiDialog\n                className=\"max-w-[22rem]\"\n                title=\"Press Key\"\n                open={Boolean(pickKey)}\n                onClose={() => setPickKey(undefined)}\n            >\n                <AppKeyPicker\n                    keyOf={pickKey!}\n                    onChange={(code) => {\n                        log({pickKey, code});\n                        dispatch(actionKeys({keyOf: pickKey!, code}));\n                        setPickKey(undefined);\n                    }}\n                />\n                <UiButton\n                    className=\"mt-5 ml-auto mr-auto px-6 py-2\"\n                    primary={true}\n                    onClick={() => setPickKey(undefined)}\n                >\n                    Cancel\n                </UiButton>\n            </UiDialog>\n        </>\n    );\n};\n","import classNames from 'classnames';\nimport {FC} from 'react';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {AppActions} from '../../../store/app/app-actions';\nimport {AppDarkMode} from '../../molecules/app/AppDarkMode';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {UiButton} from '../../particles/ui/UiButton';\nimport {OptionsAudio} from '../options/OptionsAudio';\nimport {OptionsGame} from '../options/OptionsGame';\nimport {OptionsKeyBindings} from '../options/OptionsKeyBindings';\n\nexport interface GameOptionsProps {\n    darkMode: boolean;\n}\n\nexport const GameOptions: FC<GameOptionsProps & ClassNameProps> = ({\n    darkMode,\n    className\n}) => {\n    const dispatch = useAppDispatch();\n    return (\n        <div className={classNames(className, 'flex flex-col')}>\n            <div className=\"grid grid-cols-2 gap-2\">\n                <OptionsKeyBindings />\n                <OptionsGame />\n                <OptionsAudio />\n                <UiButton\n                    className=\"mt-3 py-2\"\n                    onClick={() => dispatch(AppActions.resetScore())}\n                >\n                    Reset High Scores\n                </UiButton>\n                <UiButton\n                    className=\"mt-3 py-2\"\n                    onClick={() => dispatch(AppActions.resetOptions())}\n                >\n                    Reset Options\n                </UiButton>\n            </div>\n            {darkMode && <AppDarkMode className=\"ml-auto mr-auto mt-5\" />}\n        </div>\n    );\n};\n","import {FC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {AppDialogType} from '../../../store/app/app-model';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {AppCopyright} from '../../atoms/app/AppCopyright';\nimport {AppDialog, AppDialogControl} from '../../molecules/app/AppDialog';\nimport {GameOptions} from '../game/GameOptions';\n\nexport interface OptionsDialogProps {\n    selectWelcoming?: () => boolean;\n}\n\nexport const OptionsDialog: FC<OptionsDialogProps & Partial<AppDialogControl>> =\n    ({\n        selectWelcoming = GameSelectors.welcoming,\n        selectOpen = AppSelectors.isOpen(AppDialogType.OPTIONS)\n    }) => {\n        const welcoming = useSelector(selectWelcoming);\n        return (\n            <AppDialog\n                className=\"max-w-[22rem]\"\n                title=\"Options\"\n                large={true}\n                selectOpen={selectOpen}\n            >\n                <GameOptions darkMode={!welcoming} />\n                <AppCopyright className=\"mt-auto mx-auto mt-5\" />\n            </AppDialog>\n        );\n    };\n","import {PayloadAction} from '@reduxjs/toolkit';\nimport classNames from 'classnames';\nimport {FC} from 'react';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {UiButton} from '../../particles/ui/UiButton';\n\nexport interface AppMenuItem {\n    action: PayloadAction<any>;\n\n    active?: boolean;\n\n    title: string;\n}\n\nexport interface AppMenuProps {\n    items: AppMenuItem[];\n}\n\nexport const AppMenu: FC<AppMenuProps & ClassNameProps> = ({\n    items,\n    className\n}) => {\n    const dispatch = useAppDispatch();\n    return (\n        <div className={classNames(className, 'flex flex-col')}>\n            {items.map(({action, active, title}, indx) => (\n                <UiButton\n                    className=\"py-2 px-4 mb-4\"\n                    primary={active}\n                    onClick={() => dispatch(action)}\n                    key={indx}\n                >\n                    {title}\n                </UiButton>\n            ))}\n        </div>\n    );\n};\n","import {FC, useMemo} from 'react';\nimport {FaCog} from 'react-icons/fa';\nimport {useSelector} from 'react-redux';\nimport {AppActions} from '../../../store/app/app-actions';\nimport {AppDialogType} from '../../../store/app/app-model';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {GameActions} from '../../../store/game/game-actions';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {AppBar, AppBarTool} from '../../atoms/app/AppBar';\nimport {AppMenu, AppMenuItem} from '../../atoms/app/AppMenu';\nimport {AppDialog, AppDialogControl} from '../../molecules/app/AppDialog';\nimport {\n    MUSIC_ICON,\n    MUSIC_TOOLTIP,\n    SOUND_ICON,\n    SOUND_TOOLTIP\n} from '../../particles/audio.types';\n\nexport interface PauseDialogProps {\n    selectMusic?: () => boolean;\n\n    selectSound?: () => boolean;\n\n    selectStart?: () => number;\n}\n\nexport const PauseDialog: FC<PauseDialogProps & Partial<AppDialogControl>> = ({\n    selectMusic = AppSelectors.music,\n    selectSound = AppSelectors.sound,\n    selectStart = AppSelectors.startLevel,\n    closeAction = GameActions.resume(),\n    selectOpen = GameSelectors.paused\n}) => {\n    const music = useSelector(selectMusic);\n    const sound = useSelector(selectSound);\n    const startLevel = useSelector(selectStart);\n\n    const tools = useMemo((): AppBarTool[] => {\n        return [\n            {\n                icon: SOUND_ICON[sound.toString()],\n                toolTip: SOUND_TOOLTIP[sound.toString()],\n                active: sound,\n                action: AppActions.sound()\n            },\n            {\n                icon: MUSIC_ICON[music.toString()],\n                toolTip: MUSIC_TOOLTIP[music.toString()],\n                active: music,\n                action: AppActions.music()\n            },\n            {\n                icon: <FaCog />,\n                toolTip: 'Options',\n                action: AppActions.open(AppDialogType.OPTIONS)\n            }\n        ];\n    }, [music, sound]);\n\n    const menu: Array<AppMenuItem> = useMemo(() => {\n        return [\n            {title: 'Continue', action: GameActions.resume(), active: true},\n            {title: 'Restart', action: GameActions.start(startLevel)},\n            {title: 'Quit Game', action: GameActions.quit()}\n        ];\n    }, [startLevel]);\n\n    return (\n        <AppDialog\n            className=\"max-w-[12rem]\"\n            title=\"Paused\"\n            selectOpen={selectOpen}\n            closeAction={closeAction}\n        >\n            <AppMenu className=\"mb-5\" items={menu} />\n            <AppBar tools={tools} />\n        </AppDialog>\n    );\n};\n","import {useEffect} from 'react';\nimport ReactGA from 'react-ga';\n\nexport const usePageView = (url: string) => {\n    useEffect(() => {\n        ReactGA.pageview(url);\n    }, [url]);\n};\n","import {useEffect, useMemo} from 'react';\nimport {useSelector} from 'react-redux';\nimport {environment} from '../../../environment/environment';\nimport {GameStatus} from '../../../store/game/game-model';\nimport {GameSelectors} from '../../../store/game/game-selectors';\n\nconst STATUS_TITLE = {\n    [GameStatus.WELCOME]: 'Welcome',\n    [GameStatus.STARTING]: 'Starting',\n    [GameStatus.RUNNING]: 'Playing',\n    [GameStatus.PAUSED]: 'Paused',\n    [GameStatus.FINISHING]: 'Game Over',\n    [GameStatus.FINISHED]: 'Game Over'\n};\n\nexport const useTitle = () => {\n    const status = useSelector(GameSelectors.status);\n    const title = useMemo(\n        () => `${STATUS_TITLE[status]} | ${environment.brandName}`,\n        [status]\n    );\n    useEffect(() => {\n        document.title = title;\n    }, [title]);\n};\n","import classNames from 'classnames';\nimport {FC} from 'react';\nimport {useUiTheme} from '../../particles/contexts/UiThemeContext';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface GameValueProps {\n    label: string;\n\n    reverse?: boolean;\n}\n\nexport const GameValue: FC<GameValueProps & ClassNameProps> = ({\n    label,\n    reverse = false,\n    className,\n    children\n}) => {\n    const {transparent} = useUiTheme();\n    return (\n        <div\n            className={classNames(className, 'flex items-center w-full', {\n                'flex-col': !reverse,\n                'flex-col-reverse': reverse\n            })}\n        >\n            <div className=\"flex text-light mb-1\">{label}</div>\n            <div\n                className={classNames('flex w-full flex-col rounded-lg', {\n                    'border border-gray-200 dark:border-gray-600': transparent,\n                    'dark:nm-inset-gray-800 nm-inset-gray-100': !transparent\n                })}\n            >\n                {children}\n            </div>\n        </div>\n    );\n};\n","import classNames from 'classnames';\nimport {CSSProperties, FC, useMemo} from 'react';\nimport {TetrominosType} from '../../../engine/game-tetrominos';\nimport './GameBlock.css';\n\nexport interface GameBlockProps {\n    ghost?: number;\n\n    glow?: boolean;\n\n    grid?: boolean;\n\n    speed?: number;\n\n    type?: TetrominosType;\n}\n\nexport const GAME_BLOCK_COLOR = {\n    [TetrominosType.I]: 'color-i',\n    [TetrominosType.O]: 'color-o',\n    [TetrominosType.T]: 'color-t',\n    [TetrominosType.S]: 'color-s',\n    [TetrominosType.Z]: 'color-z',\n    [TetrominosType.J]: 'color-j',\n    [TetrominosType.L]: 'color-l'\n};\n\nexport const GameBlock: FC<GameBlockProps> = ({\n    ghost,\n    glow,\n    grid,\n    speed,\n    type\n}) => {\n    const styleAnimation = useMemo(() => {\n        const style: CSSProperties = {};\n        if (type && glow && speed) {\n            style['animationDuration'] = `${speed}ms`;\n        }\n        if (ghost) {\n            style['opacity'] = `${ghost}`;\n        }\n        return style;\n    }, [type, glow, speed, ghost]);\n\n    return (\n        <div\n            className={classNames('game-block', {'game-block-border': grid})}\n            data-testid=\"game-block\"\n        >\n            <div\n                className={classNames(\n                    'block-color relative w-full h-full rounded-sm',\n                    !glow && type && GAME_BLOCK_COLOR[type],\n                    {\n                        'color-glow': type && glow,\n                        ghost: type && ghost,\n                        fill: type && !ghost\n                    }\n                )}\n                style={styleAnimation}\n            />\n        </div>\n    );\n};\n","import classNames from 'classnames';\nimport {FC, useMemo} from 'react';\nimport {GamePiece} from '../../../engine/game-player';\nimport {TetrominosType} from '../../../engine/game-tetrominos';\nimport {GameBlock} from '../../atoms/game/GameBlock';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface DesignDisplayProps {\n    center?: [number, number];\n\n    count?: number;\n\n    grid?: boolean;\n\n    type?: TetrominosType;\n\n    values?: GamePiece;\n}\n\nexport const DesignDisplay: FC<DesignDisplayProps & ClassNameProps> = ({\n    center = [2, 1],\n    grid = true,\n    count = 4,\n    type = TetrominosType.Z,\n    values,\n    className\n}) => {\n    const blocks = useMemo(() => {\n        const [center_x, center_y] = center;\n        const grid = Array(count * count).fill(undefined);\n        values?.forEach(\n            ([x, y]) =>\n                (grid[y * count + x + center_x + center_y * count] = type)\n        );\n        return grid;\n    }, [count, center, type, values]);\n\n    return (\n        <div\n            className={classNames(className, 'grid w-full min-w-full', {\n                'game-grid': grid\n            })}\n            style={{gridTemplateColumns: `repeat(${count}, minmax(0, 1fr))`}}\n        >\n            {blocks.map((blockType, indx) => (\n                <GameBlock key={indx} type={blockType} grid={grid} />\n            ))}\n        </div>\n    );\n};\n","import classNames from 'classnames';\nimport {FC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {GAME_PIECES} from '../../../engine/game-player';\nimport {AppState} from '../../../store/app-store';\nimport {NextTetrominos} from '../../../store/game/game-model';\nimport {GameValue} from '../../atoms/game/GameValue';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {DesignDisplay} from '../design/DesignDisplay';\n\nexport interface GamePiecesProps {\n    label: string;\n\n    reverse?: boolean;\n\n    selectPieces: (state: AppState) => NextTetrominos;\n}\n\nexport const GamePieces: FC<GamePiecesProps & ClassNameProps> = ({\n    label,\n    reverse = false,\n    selectPieces,\n    className\n}) => {\n    const pieces: NextTetrominos = useSelector(selectPieces);\n    return (\n        <GameValue label={label} reverse={reverse}>\n            <div\n                className={classNames(\n                    className,\n                    'flex flex-col relative w-full'\n                )}\n            >\n                {pieces.map((type, indx) => (\n                    <DesignDisplay\n                        key={indx}\n                        values={type ? GAME_PIECES[type][0] : undefined}\n                        type={type}\n                        grid={false}\n                    />\n                ))}\n            </div>\n        </GameValue>\n    );\n};\n","import {FC, useEffect} from 'react';\n\nexport interface KeyPressedProps {\n    keyCode: string;\n\n    onPress?: () => void;\n\n    onRelease?: () => void;\n}\n\nexport const KeyPressed: FC<KeyPressedProps> = ({\n    keyCode,\n    onPress,\n    onRelease\n}) => {\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (!e.repeat && e.code === keyCode) {\n                if (e.type === 'keydown') {\n                    onPress && onPress();\n                }\n                if (e.type === 'keyup') {\n                    onRelease && onRelease();\n                }\n            }\n        };\n\n        document.addEventListener('keydown', listener);\n        document.addEventListener('keyup', listener);\n        return () => {\n            document.removeEventListener('keydown', listener);\n            document.removeEventListener('keyup', listener);\n        };\n    }, [keyCode, onPress, onRelease]);\n    return null;\n};\n","import classNames from 'classnames';\nimport {FC, useState} from 'react';\nimport {CgArrowsExpandLeft} from 'react-icons/cg';\nimport {useUiTheme} from '../../particles/contexts/UiThemeContext';\nimport {KeyPressed} from '../../particles/nulls/KeyPressed';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {UiButton, UiButtonShape} from '../../particles/ui/UiButton';\n\nexport interface GameHoldProps {\n    disabled: boolean;\n\n    keyCode: string;\n\n    onHold: () => void;\n}\n\nexport const GameHold: FC<GameHoldProps & ClassNameProps> = ({\n    disabled,\n    keyCode,\n    onHold,\n    className\n}) => {\n    const [active, setActive] = useState(false);\n    const {large} = useUiTheme();\n\n    return (\n        <>\n            <UiButton\n                data-testid=\"game-hold\"\n                className={classNames(className, 'flex text-sm', {\n                    'p-2': !large,\n                    'p-3': large\n                })}\n                preventFocus={true}\n                disabled={disabled}\n                active={active && !disabled}\n                shape={UiButtonShape.ROUND}\n                onClick={() => onHold()}\n            >\n                <CgArrowsExpandLeft />\n            </UiButton>\n            <KeyPressed\n                keyCode={keyCode}\n                onPress={() => {\n                    !disabled && onHold();\n                    setActive(true);\n                }}\n                onRelease={() => {\n                    setActive(false);\n                }}\n            />\n        </>\n    );\n};\n","import classNames from 'classnames';\nimport {FC, useMemo, useState} from 'react';\nimport {BiRotateLeft, BiRotateRight} from 'react-icons/bi';\nimport {useUiTheme} from '../../particles/contexts/UiThemeContext';\nimport {KeyPressed} from '../../particles/nulls/KeyPressed';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {UiButton, UiButtonShape} from '../../particles/ui/UiButton';\n\nexport interface GameRotateProps {\n    disabled?: boolean;\n\n    keyCodeLeft: string;\n\n    keyCodeRight: string;\n\n    onRotateLeft: () => void;\n\n    onRotateRight: () => void;\n}\n\nexport const GameRotate: FC<GameRotateProps & ClassNameProps> = ({\n    disabled,\n    keyCodeLeft,\n    keyCodeRight,\n    onRotateLeft,\n    onRotateRight,\n    className\n}) => {\n    const [left, setLeft] = useState(false);\n    const [right, setRight] = useState(false);\n    const {large} = useUiTheme();\n\n    const btnClass = useMemo(\n        () =>\n            classNames(className, 'flex text-lg items-center justify-center', {\n                'w-14 h-14': !large,\n                'w-16 h-16': large\n            }),\n        [className, large]\n    );\n\n    return (\n        <div className=\"flex gap-4 my-auto\">\n            <UiButton\n                data-testid=\"game-rotate-left\"\n                className={btnClass}\n                preventFocus={true}\n                disabled={disabled}\n                active={left}\n                shape={UiButtonShape.LEFT}\n                onPress={onRotateLeft}\n            >\n                <BiRotateLeft />\n            </UiButton>\n            <UiButton\n                data-testid=\"game-rotate-right\"\n                className={btnClass}\n                preventFocus={true}\n                disabled={disabled}\n                active={right}\n                shape={UiButtonShape.RIGHT}\n                onPress={onRotateRight}\n            >\n                <BiRotateRight />\n            </UiButton>\n            {!disabled && (\n                <KeyPressed\n                    keyCode={keyCodeLeft}\n                    onPress={() => {\n                        onRotateLeft();\n                        setLeft(true);\n                    }}\n                    onRelease={() => {\n                        setLeft(false);\n                    }}\n                />\n            )}\n            {!disabled && (\n                <KeyPressed\n                    keyCode={keyCodeRight}\n                    onPress={() => {\n                        onRotateRight();\n                        setRight(true);\n                    }}\n                    onRelease={() => {\n                        setRight(false);\n                    }}\n                />\n            )}\n        </div>\n    );\n};\n","import classNames from 'classnames';\nimport {FC} from 'react';\nimport {FaBars} from 'react-icons/fa';\nimport {useSelector} from 'react-redux';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {GameActions} from '../../../store/game/game-actions';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {useUiTheme} from '../../particles/contexts/UiThemeContext';\nimport {KeyPressed} from '../../particles/nulls/KeyPressed';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {UiButton, UiButtonShape} from '../../particles/ui/UiButton';\n\nexport const GameSettings: FC<ClassNameProps> = ({className}) => {\n    const paused = useSelector(GameSelectors.paused);\n    const dispatch = useAppDispatch();\n    const {large} = useUiTheme();\n\n    return (\n        <>\n            <UiButton\n                data-testid=\"game-settings\"\n                className={classNames(className, 'flex text-sm', {\n                    'p-2': !large,\n                    'p-3': large\n                })}\n                disabled={paused}\n                preventFocus={true}\n                primary={true}\n                shape={UiButtonShape.ROUND}\n                onClick={() => dispatch(GameActions.pause())}\n            >\n                <FaBars />\n            </UiButton>\n            {!paused && (\n                <KeyPressed\n                    keyCode={'Escape'}\n                    onPress={() => dispatch(GameActions.pause())}\n                />\n            )}\n        </>\n    );\n};\n","import classNames from 'classnames';\nimport {FC, ReactElement, useState} from 'react';\nimport {useUiTheme} from '../../particles/contexts/UiThemeContext';\nimport {KeyPressed} from '../../particles/nulls/KeyPressed';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {UiButton, UiButtonShape} from '../../particles/ui/UiButton';\n\nexport interface GameDropProps {\n    disabled?: boolean;\n\n    icon: ReactElement;\n\n    keyCode: string;\n\n    onDrop: (pressed: boolean) => void;\n\n    shape: UiButtonShape;\n}\n\nexport const GameDrop: FC<GameDropProps & ClassNameProps> = ({\n    disabled,\n    icon,\n    keyCode,\n    onDrop,\n    shape,\n    className\n}) => {\n    const [active, setActive] = useState(false);\n    const {large} = useUiTheme();\n\n    return (\n        <>\n            <UiButton\n                className={classNames(\n                    className,\n                    'items-center justify-center',\n                    {'p-4': !large, 'p-5': large}\n                )}\n                disabled={disabled}\n                preventFocus={true}\n                shape={shape}\n                active={active}\n                data-testid=\"game-soft-drop\"\n                onPress={() => onDrop(true)}\n                onRelease={() => onDrop(false)}\n            >\n                {icon}\n            </UiButton>\n            {!disabled && (\n                <KeyPressed\n                    keyCode={keyCode}\n                    onPress={() => {\n                        onDrop(true);\n                        setActive(true);\n                    }}\n                    onRelease={() => {\n                        onDrop(false);\n                        setActive(false);\n                    }}\n                />\n            )}\n        </>\n    );\n};\n","import {FC, useEffect} from 'react';\n\nexport interface RepeaterProps {\n    disabled?: boolean;\n\n    emitFirst?: boolean;\n\n    onRepeat: () => void;\n\n    speed: number;\n}\n\nexport const Repeater: FC<RepeaterProps> = ({\n    emitFirst,\n    disabled,\n    onRepeat,\n    speed\n}) => {\n    useEffect(() => {\n        if (!disabled) {\n            emitFirst && onRepeat();\n            if (speed > 0) {\n                const id = setInterval(() => onRepeat(), speed);\n                return () => clearInterval(id);\n            }\n        }\n    }, [emitFirst, disabled, onRepeat, speed]);\n    return null;\n};\n","import classNames from 'classnames';\nimport {FC, ReactElement, useCallback, useEffect, useState} from 'react';\nimport {useUiTheme} from '../../particles/contexts/UiThemeContext';\nimport {KeyPressed} from '../../particles/nulls/KeyPressed';\nimport {Repeater} from '../../particles/nulls/Repeater';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {UiButton, UiButtonShape} from '../../particles/ui/UiButton';\n\nconst SKIP_SECOND_REPEAT = 1;\n\nexport interface GameMoveProps {\n    disabled?: boolean;\n\n    icon: ReactElement;\n\n    keyCode: string;\n\n    onMove: () => void;\n\n    shape: UiButtonShape;\n\n    speed?: number;\n}\n\nexport const GameMove: FC<GameMoveProps & ClassNameProps> = ({\n    disabled,\n    icon,\n    keyCode,\n    onMove,\n    speed = 500,\n    shape,\n    className\n}) => {\n    const [count, setCount] = useState(0);\n    const [enable, setEnable] = useState(false);\n    const {large} = useUiTheme();\n\n    useEffect(() => {\n        if (enable && count !== SKIP_SECOND_REPEAT) {\n            onMove();\n        }\n    }, [enable, count, onMove]);\n\n    const startRepeat = useCallback(() => {\n        setEnable(true);\n        setCount(0);\n    }, []);\n    const stopRepeat = useCallback(() => setEnable(false), []);\n\n    return (\n        <>\n            <UiButton\n                data-testid=\"game-move\"\n                className={classNames(\n                    'items-center justify-center',\n                    className,\n                    {'p-4': !large, 'p-5': large}\n                )}\n                preventFocus={true}\n                disabled={disabled}\n                active={enable}\n                shape={shape}\n                onPress={() => startRepeat()}\n                onRelease={() => stopRepeat()}\n            >\n                {icon}\n            </UiButton>\n            {!disabled && (\n                <KeyPressed\n                    keyCode={keyCode}\n                    onPress={startRepeat}\n                    onRelease={stopRepeat}\n                />\n            )}\n            {!disabled && (\n                <Repeater\n                    onRepeat={() => setCount(count + 1)}\n                    disabled={!enable}\n                    speed={speed}\n                />\n            )}\n        </>\n    );\n};\n","import classNames from 'classnames';\nimport {FC} from 'react';\nimport {\n    FaChevronDown,\n    FaChevronLeft,\n    FaChevronRight,\n    FaChevronUp\n} from 'react-icons/fa';\nimport {GameDrop} from '../../atoms/game/GameDrop';\nimport {GameMove} from '../../atoms/game/GameMove';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {UiButtonShape} from '../../particles/ui/UiButton';\n\nexport interface GameArrowsProps {\n    disabled?: boolean;\n\n    hardDrop: string;\n\n    left: string;\n\n    onHardDrop: () => void;\n\n    onLeft: () => void;\n\n    onRight: () => void;\n\n    onSoftDrop: (fast: boolean) => void;\n\n    right: string;\n\n    softDrop: string;\n\n    speed?: number;\n}\n\nexport const GameArrows: FC<GameArrowsProps & ClassNameProps> = ({\n    disabled,\n    hardDrop,\n    left,\n    right,\n    softDrop,\n    onHardDrop,\n    onLeft,\n    onRight,\n    onSoftDrop,\n    speed = 500,\n    className\n}) => {\n    return (\n        <div className={classNames(className, 'grid grid-cols-3 gap-1')}>\n            <GameDrop\n                className=\"col-start-2\"\n                disabled={disabled}\n                icon={<FaChevronUp />}\n                keyCode={hardDrop}\n                onDrop={(enable) => {\n                    enable && onHardDrop();\n                }}\n                shape={UiButtonShape.UP}\n            />\n            <GameMove\n                className=\"col-start-1\"\n                disabled={disabled}\n                icon={<FaChevronLeft />}\n                keyCode={left}\n                onMove={onLeft}\n                speed={speed}\n                shape={UiButtonShape.LEFT}\n            />\n            <GameMove\n                className=\"col-start-3\"\n                disabled={disabled}\n                icon={<FaChevronRight />}\n                keyCode={right}\n                onMove={onRight}\n                speed={speed}\n                shape={UiButtonShape.RIGHT}\n            />\n            <GameDrop\n                className=\"col-start-2\"\n                disabled={disabled}\n                icon={<FaChevronDown />}\n                keyCode={softDrop}\n                onDrop={onSoftDrop}\n                shape={UiButtonShape.DOWN}\n            />\n        </div>\n    );\n};\n","import classNames from 'classnames';\nimport {FC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {GamePlayerDirection} from '../../../engine/game-transform';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {GameActions} from '../../../store/game/game-actions';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {GameHold} from '../../atoms/game/GameHold';\nimport {GameRotate} from '../../atoms/game/GameRotate';\nimport {GameSettings} from '../../atoms/game/GameSettings';\nimport {GameArrows} from '../../molecules/game/GameArrows';\nimport {\n    UiThemeProvider,\n    useUiTheme\n} from '../../particles/contexts/UiThemeContext';\nimport {KeyBindings} from '../../particles/key_bindings.types';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface GameControlsProps {\n    selectEnabled?: () => boolean;\n\n    selectHoldEnabled?: () => boolean;\n\n    selectKeys?: () => KeyBindings;\n\n    selectRepeatSpeed?: () => number;\n\n    transparent?: boolean;\n}\n\nexport const GameControls: FC<GameControlsProps & ClassNameProps> = ({\n    selectKeys = AppSelectors.keys,\n    selectRepeatSpeed = GameSelectors.repeatSpeed,\n    selectEnabled = GameSelectors.running,\n    selectHoldEnabled = GameSelectors.holdEnabled,\n    transparent,\n    className\n}) => {\n    const {left, right, rotate_left, rotate_right, soft_drop, hard_drop, hold} =\n        useSelector(selectKeys);\n    const repeatSpeed = useSelector(selectRepeatSpeed);\n    const enabled = useSelector(selectEnabled);\n    const holdEnabled = useSelector(selectHoldEnabled);\n    const dispatch = useAppDispatch();\n    const {large} = useUiTheme();\n    return (\n        <div className={classNames(className, 'flex relative')}>\n            <UiThemeProvider transparent={Boolean(transparent)} large={large}>\n                <GameArrows\n                    disabled={!enabled}\n                    left={left}\n                    right={right}\n                    softDrop={soft_drop}\n                    hardDrop={hard_drop}\n                    onLeft={() =>\n                        dispatch(GameActions.move(GamePlayerDirection.LEFT))\n                    }\n                    onRight={() =>\n                        dispatch(GameActions.move(GamePlayerDirection.RIGHT))\n                    }\n                    onSoftDrop={(fast) => dispatch(GameActions.softDrop(fast))}\n                    onHardDrop={() => dispatch(GameActions.hardDrop())}\n                    speed={repeatSpeed}\n                />\n                <div className=\"flex relative ml-auto\">\n                    <GameHold\n                        className=\"absolute top-0 left-0\"\n                        keyCode={hold}\n                        disabled={!enabled || !holdEnabled}\n                        onHold={() => {\n                            dispatch(GameActions.hold());\n                            dispatch(GameActions.tick());\n                        }}\n                    />\n                    <GameRotate\n                        disabled={!enabled}\n                        keyCodeLeft={rotate_left}\n                        keyCodeRight={rotate_right}\n                        onRotateLeft={() =>\n                            dispatch(\n                                GameActions.rotate(GamePlayerDirection.LEFT)\n                            )\n                        }\n                        onRotateRight={() =>\n                            dispatch(\n                                GameActions.rotate(GamePlayerDirection.RIGHT)\n                            )\n                        }\n                    />\n                </div>\n                <GameSettings className=\"absolute top-0 right-0\" />\n            </UiThemeProvider>\n        </div>\n    );\n};\n","import {DependencyList, useEffect, useMemo} from 'react';\n\nexport const useInterval = (\n    callback: () => void,\n    ms: number,\n    deps: DependencyList\n) => {\n    const all_deps = useMemo(\n        () => [callback, ms, ...deps],\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [callback, ms, deps]\n    );\n    useEffect(() => {\n        const id = setInterval(() => callback(), ms);\n        return () => clearInterval(id);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, all_deps);\n};\n","import {FC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {useInterval} from '../../particles/hooks/useInterval';\n\nexport interface GameTickerProps {\n    onTick: () => void;\n\n    speed: number;\n}\n\nexport const GameTicker: FC<GameTickerProps> = ({speed, onTick}) => {\n    useInterval(() => onTick(), speed, [speed, onTick]);\n    return null;\n};\n","import classNames from 'classnames';\nimport {FC, useEffect, useState} from 'react';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface GameTimerProps {\n    count?: number;\n\n    onStart: () => void;\n}\n\nexport const GameTimer: FC<GameTimerProps & ClassNameProps> = ({\n    count,\n    onStart,\n    className\n}) => {\n    const [counter, setCounter] = useState(() => count as number);\n\n    useEffect(() => {\n        if (counter > 0) {\n            const id = setInterval(() => setCounter(counter - 1), 1000);\n            return () => clearInterval(id);\n        } else if (counter === 0) {\n            onStart();\n        }\n    }, [counter, onStart]);\n\n    return (\n        <div\n            data-testid=\"game-timer\"\n            className={classNames(\n                className,\n                'flex font-mono items-center justify-center text-9xl'\n            )}\n        >\n            {counter > 0 ? counter : ''}\n        </div>\n    );\n};\n\nGameTimer.defaultProps = {\n    count: 3\n};\n","import {FC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {GameBlock} from './GameBlock';\n\nexport interface GameBlockIndexProps {\n    indx: number;\n}\n\nexport const GameBlockIndex: FC<GameBlockIndexProps> = ({indx}) => {\n    const cell = useSelector(GameSelectors.screenCell(indx));\n    const speed = useSelector(GameSelectors.speed);\n    return cell ? (\n        <GameBlock\n            type={cell.type}\n            glow={cell.glow}\n            ghost={cell.ghost}\n            speed={speed}\n            grid={true}\n        />\n    ) : null;\n};\n","import classNames from 'classnames';\nimport {FC, useMemo} from 'react';\nimport {useSelector} from 'react-redux';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {GameBlockIndex} from '../../atoms/game/GameBlockIndex';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport './GameGrid.css';\n\nexport const GameGrid: FC<ClassNameProps> = ({className}) => {\n    const [width, height] = useSelector(GameSelectors.size);\n    const blocks = useMemo(\n        () => Array(width * height).fill(null),\n        [width, height]\n    );\n\n    return (\n        <div\n            className={classNames(\n                className,\n                'game-grid ml-auto mr-auto w-full min-w-full min-h-full'\n            )}\n            style={{gridTemplateColumns: `repeat(${width}, minmax(0, 1fr))`}}\n        >\n            {blocks.map((_, indx) => (\n                <GameBlockIndex key={indx} indx={indx} />\n            ))}\n        </div>\n    );\n};\n","import {FC, useEffect, useRef} from 'react';\n\nexport interface GameAudioProps {\n    autoPlay?: boolean;\n\n    loop?: boolean;\n\n    onDone?: () => void;\n\n    onLoaded?: () => void;\n\n    src: string;\n\n    volume?: number;\n}\n\nexport const GameAudio: FC<GameAudioProps> = ({\n    autoPlay = true,\n    loop,\n    onDone,\n    onLoaded,\n    src,\n    volume\n}) => {\n    const ref = useRef<HTMLAudioElement>(null);\n\n    useEffect(() => {\n        if (volume) {\n            ref.current!.volume = volume;\n        }\n    }, [ref, volume]);\n\n    return (\n        <audio\n            src={src}\n            ref={ref}\n            autoPlay={autoPlay}\n            controls={false}\n            loop={Boolean(loop)}\n            onEnded={() => onDone && onDone()}\n            onCanPlayThrough={() => onLoaded && onLoaded()}\n        />\n    );\n};\n","import {FC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {GameAudio} from '../../atoms/game/GameAudio';\nimport {AUDIO_FILES} from '../../particles/audio.types';\n\nexport const GameMusic: FC = () => {\n    const music = useSelector(AppSelectors.music);\n    const musicVolume = useSelector(AppSelectors.musicVolume);\n    const musicType = useSelector(AppSelectors.musicType);\n    return (\n        <>\n            {music && (\n                <GameAudio\n                    src={AUDIO_FILES[musicType]}\n                    volume={musicVolume / 100}\n                    loop={true}\n                />\n            )}\n        </>\n    );\n};\n","import {FC, useCallback, useMemo} from 'react';\nimport {GameAudio} from './GameAudio';\n\nexport interface GameAudioLoaderProps {\n    onLoaded: () => void;\n\n    sources: Array<string>;\n}\n\nexport const GameAudioLoader: FC<GameAudioLoaderProps> = ({\n    sources,\n    onLoaded\n}) => {\n    const sourceMap = useMemo(() => {\n        const pairs: Array<[string, boolean]> = sources.map((src) => [\n            src,\n            false\n        ]);\n        return new Map<string, boolean>(pairs);\n    }, [sources]);\n\n    const setLoaded = useCallback(\n        (key: string) => {\n            sourceMap.set(key, true);\n            const values = Array.from(sourceMap.values());\n            if (values.every((loaded) => loaded)) {\n                onLoaded();\n            }\n        },\n        [sourceMap, onLoaded]\n    );\n\n    return (\n        <>\n            {Array.from(sourceMap.keys()).map((src) => (\n                <GameAudio\n                    key={src}\n                    src={src}\n                    autoPlay={false}\n                    onLoaded={() => setLoaded(src)}\n                />\n            ))}\n        </>\n    );\n};\n","import classNames from 'classnames';\nimport {FC, useMemo} from 'react';\nimport {useSelector} from 'react-redux';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {GameAudioLoader} from '../../atoms/game/GameAudioLoader';\nimport {AUDIO_FILES, PRELOAD_AUDIO} from '../../particles/audio.types';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface GamePreloaderProps {\n    onLoaded: () => void;\n}\n\nexport const GamePreloader: FC<GamePreloaderProps & ClassNameProps> = ({\n    onLoaded,\n    className\n}) => {\n    const musicType = useSelector(AppSelectors.musicType);\n    const preload = useMemo(\n        () => [...PRELOAD_AUDIO, AUDIO_FILES[musicType]],\n        [musicType]\n    );\n    return (\n        <div\n            data-testid=\"game-loader\"\n            className={classNames(\n                className,\n                'flex font-mono items-center justify-center text-2xl'\n            )}\n        >\n            Loading\n            <GameAudioLoader sources={preload} onLoaded={onLoaded} />\n        </div>\n    );\n};\n","import {FC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {GameActions} from '../../../store/game/game-actions';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {GameAudio} from '../../atoms/game/GameAudio';\n\nexport const GameSoundTracks: FC = () => {\n    const sound = useSelector(AppSelectors.sound);\n    const soundVolume = useSelector(AppSelectors.soundVolume);\n    const soundTracks = useSelector(GameSelectors.soundTracks);\n    const dispatch = useAppDispatch();\n\n    return (\n        <>\n            {sound &&\n                soundTracks.map(({id, src}) => (\n                    <GameAudio\n                        key={id}\n                        src={src}\n                        volume={soundVolume / 100}\n                        onDone={() => dispatch(GameActions.soundTrack(id))}\n                    />\n                ))}\n        </>\n    );\n};\n","import classNames from 'classnames';\nimport {FC} from 'react';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface GameToastProps {\n    message: string;\n}\n\nexport const GameToast: FC<GameToastProps & ClassNameProps> = ({\n    message,\n    className\n}) => {\n    return (\n        <div\n            data-testid=\"game-toast\"\n            className={classNames(\n                className,\n                'flex font-mono items-center justify-center text-4xl'\n            )}\n        >\n            {message}\n        </div>\n    );\n};\n","import classNames from 'classnames';\nimport {FC, useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {GameActions} from '../../../store/game/game-actions';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {GameTicker} from '../../atoms/game/GameTicker';\nimport {GameTimer} from '../../atoms/game/GameTimer';\nimport {GameGrid} from '../../molecules/game/GameGrid';\nimport {GameMusic} from '../../molecules/game/GameMusic';\nimport {GamePreloader} from '../../molecules/game/GamePreloader';\nimport {GameSoundTracks} from '../../molecules/game/GameSoundTracks';\nimport {GameToast} from '../../molecules/game/GameToast';\nimport {useUiTheme} from '../../particles/contexts/UiThemeContext';\nimport {useDocVisible} from '../../particles/hooks/useDocVisible';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport const GameEngine: FC<ClassNameProps> = ({className}) => {\n    const [loaded, setLoaded] = useState(false);\n    const [showToast, setShowToast] = useState(false);\n    const dispatch = useAppDispatch();\n    const visible = useDocVisible();\n\n    const starting = useSelector(GameSelectors.starting);\n    const running = useSelector(GameSelectors.running);\n    const finishing = useSelector(GameSelectors.finishing);\n    const restartTicker = useSelector(GameSelectors.restartTicker);\n    const toast = useSelector(GameSelectors.toastMessage);\n    const speed = useSelector(GameSelectors.speed);\n\n    useEffect(() => {\n        if (toast) {\n            setShowToast(true);\n            const id = setTimeout(() => {\n                setShowToast(false);\n            }, 1000);\n            return () => {\n                setShowToast(false);\n                clearTimeout(id);\n            };\n        }\n    }, [toast]);\n\n    useEffect(() => {\n        if (!visible) {\n            dispatch(GameActions.pause());\n        }\n    }, [visible, dispatch]);\n\n    const {transparent} = useUiTheme();\n\n    return (\n        <div\n            className={classNames(\n                className,\n                'flex relative overflow-hidden rounded-lg desktop:p-4 w-full',\n                {\n                    'border border-gray-200 dark:border-gray-600': transparent,\n                    'dark:nm-inset-gray-800 nm-inset-gray-100': !transparent\n                }\n            )}\n        >\n            <GameGrid />\n            {running && <GameMusic />}\n            <GameSoundTracks />\n            {starting && !loaded && (\n                <GamePreloader\n                    className=\"absolute w-full h-full -m-4\"\n                    onLoaded={() => setLoaded(true)}\n                />\n            )}\n            {starting && loaded && (\n                <GameTimer\n                    className=\"absolute w-full h-full -m-4\"\n                    onStart={() => dispatch(GameActions.run())}\n                />\n            )}\n            {showToast && (\n                <GameToast\n                    className=\"absolute w-full h-full -m-4\"\n                    message={toast!}\n                />\n            )}\n            {running &&\n                [restartTicker].map((key) => (\n                    <GameTicker\n                        speed={speed}\n                        key={key}\n                        onTick={() => dispatch(GameActions.tick())}\n                    />\n                ))}\n            {finishing && (\n                <GameTicker\n                    speed={50}\n                    onTick={() => dispatch(GameActions.finishing())}\n                />\n            )}\n        </div>\n    );\n};\n","import {useEffect, useState} from 'react';\n\nexport const useDocVisible = () => {\n    const isVisible = () => document.visibilityState === 'visible';\n    const [visible, setVisible] = useState(isVisible());\n    useEffect(() => {\n        const onVisible = () => setVisible(isVisible());\n        document.addEventListener('visibilitychange', onVisible);\n        return () =>\n            document.removeEventListener('visibilitychange', onVisible);\n    }, []);\n    return visible;\n};\n","import {FC} from 'react';\nimport {GameDigits} from '../../atoms/game/GameDigits';\nimport {GameValue} from '../../atoms/game/GameValue';\n\nexport interface GameNumberProps {\n    label: string;\n\n    primary?: boolean;\n\n    reverse?: boolean;\n\n    value: number;\n}\n\nexport const GameNumber: FC<GameNumberProps> = ({\n    label,\n    primary,\n    reverse = false,\n    value\n}) => {\n    return (\n        <GameValue label={label} reverse={reverse}>\n            <GameDigits\n                className=\"text-[1.25rem] h-[1.9rem] sm:text-2xl sm:h-[2.5rem]\"\n                digits={7}\n                primary={primary}\n                value={value}\n            />\n        </GameValue>\n    );\n};\n","import classNames from 'classnames';\nimport {VFC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {GameNumber} from '../../molecules/game/GameNumber';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface GameNumbersProps {\n    reverse?: boolean;\n}\n\nexport const GameNumbers: VFC<GameNumbersProps & ClassNameProps> = ({\n    reverse = false,\n    className\n}) => {\n    const score = useSelector(GameSelectors.score);\n    const level = useSelector(GameSelectors.level);\n    const lines = useSelector(GameSelectors.lines);\n\n    return (\n        <div className={classNames(className, 'flex')}>\n            <GameNumber label=\"Score\" value={score} reverse={reverse} />\n            <GameNumber\n                label=\"Level\"\n                value={level}\n                reverse={reverse}\n                primary={false}\n            />\n            <GameNumber\n                label=\"Lines\"\n                value={lines}\n                reverse={reverse}\n                primary={false}\n            />\n        </div>\n    );\n};\n","import {VFC} from 'react';\nimport {GameSelectors} from '../../store/game/game-selectors';\nimport {GamePieces} from '../molecules/game/GamePieces';\nimport {GameControls} from '../organisms/game/GameControls';\nimport {GameEngine} from '../organisms/game/GameEngine';\nimport {GameNumbers} from '../organisms/game/GameNumbers';\nimport {usePageView} from '../particles/hooks/usePageView';\n\nexport interface GameDesktopProps {\n    floatControls: boolean;\n}\n\nexport const GameDesktop: VFC<GameDesktopProps> = ({floatControls}) => {\n    usePageView('/game/desktop');\n    return (\n        <>\n            <div className=\"grid grid-cols-desktop gap-4 m-auto\">\n                <div className=\"flex flex-col\">\n                    <GamePieces\n                        reverse={true}\n                        className=\"p-4\"\n                        label=\"Hold\"\n                        selectPieces={GameSelectors.hold}\n                    />\n                    <GameNumbers className=\"flex-col mt-auto gap-4\" />\n                </div>\n                <GameEngine />\n                <div className=\"flex flex-col\">\n                    <GamePieces\n                        className=\"p-4\"\n                        label=\"Next\"\n                        reverse={true}\n                        selectPieces={GameSelectors.next}\n                    />\n                </div>\n                {!floatControls && (\n                    <GameControls className=\"col-start-2 mt-5\" />\n                )}\n            </div>\n            {floatControls && (\n                <div className=\"flex absolute bottom-0 mb-5 w-full\">\n                    <div className=\"grid grid-cols-desktop gap-4 mx-auto\">\n                        <GameControls\n                            className=\"col-start-2\"\n                            transparent={true}\n                        />\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n","import {VFC} from 'react';\nimport {GameSelectors} from '../../store/game/game-selectors';\nimport {GamePieces} from '../molecules/game/GamePieces';\nimport {GameControls} from '../organisms/game/GameControls';\nimport {GameEngine} from '../organisms/game/GameEngine';\nimport {GameNumbers} from '../organisms/game/GameNumbers';\nimport {usePageView} from '../particles/hooks/usePageView';\n\nexport const GameMobile: VFC = () => {\n    usePageView('/game/mobile');\n    return (\n        <div className=\"flex flex-col p-4\">\n            <GameNumbers className=\"mx-auto gap-2\" reverse={true} />\n            <div className=\"grid grid-cols-mobile gap-2 mx-auto\">\n                <div className=\"flex flex-col\">\n                    <GamePieces\n                        className=\"p-1\"\n                        label=\"Hold\"\n                        reverse={true}\n                        selectPieces={GameSelectors.hold}\n                    />\n                </div>\n                <GameEngine />\n                <div className=\"flex flex-col\">\n                    <GamePieces\n                        className=\"p-1\"\n                        label=\"Next\"\n                        reverse={true}\n                        selectPieces={GameSelectors.next}\n                    />\n                </div>\n            </div>\n            <div className=\"flex absolute bottom-14 left-4 right-4\">\n                <GameControls className=\"w-full\" transparent={true} />\n            </div>\n        </div>\n    );\n};\n","import {rand} from '../utilities.types';\n\nconst COLORS = [\n    'text-tetro_i-400',\n    'text-tetro_o-400',\n    'text-tetro_t-400',\n    'text-tetro_s-400',\n    'text-tetro_z-400',\n    'text-tetro_j-400',\n    'text-tetro_l-400'\n];\n\nexport function* aniStrobe(): IterableIterator<string> {\n    yield* COLORS;\n}\n\nexport function* aniFlash(repeat: number): IterableIterator<string> {\n    for (let x = 0; x < repeat; x++) {\n        yield 'dark:text-gray-200 text-gray-300';\n        yield 'dark:text-gray-600 text-gray-800';\n    }\n}\n\nexport function* aniRandom(count: number): IterableIterator<string> {\n    for (let x = 0; x < count; x++) {\n        yield COLORS[rand(COLORS.length)];\n    }\n}\n\nexport function* aniSlide(\n    offset: number,\n    length: number,\n    forward: boolean\n): IterableIterator<string> {\n    const colors = COLORS.map((c) => [c, c, c]).flat();\n    const start = offset;\n    const end = offset + length;\n    for (\n        let x = forward ? start : end;\n        forward ? x < end : x > start;\n        forward ? x++ : x--\n    ) {\n        yield colors[x % colors.length];\n    }\n}\n\nexport function* aniAll(\n    offset: number,\n    length: number\n): IterableIterator<string> {\n    while (true) {\n        yield* aniStrobe();\n        yield* aniRandom(10);\n        yield* aniSlide(offset, length, true);\n        yield* aniFlash(2);\n        yield* aniSlide(offset, length, false);\n    }\n}\n","import {useEffect, useMemo, useState} from 'react';\nimport {aniAll} from '../generators/animations';\nimport {useInterval} from './useInterval';\n\nexport interface Letter {\n    char: string;\n\n    color: IterableIterator<string>;\n\n    key: number;\n}\n\nexport const createLetters = (str: string): Array<Letter> => {\n    return Array.from(str).map((char, key) => {\n        return {char, key, color: aniAll(key, str.length)};\n    });\n};\n\nexport const nextColors = (letters: Array<Letter>): string[] => {\n    return letters.map(({color}) => color.next().value);\n};\n\nexport const useLetters = (\n    str: string,\n    speed: number\n): [Array<Letter>, Array<string>] => {\n    const [colors, setColors] = useState<string[]>([]);\n    const letters = useMemo<Array<Letter>>(() => createLetters(str), [str]);\n    useEffect(() => setColors(nextColors(letters)), [letters]);\n    useInterval(() => setColors(nextColors(letters)), speed, [letters]);\n    return [letters, colors];\n};\n","import classNames from 'classnames';\nimport {FC} from 'react';\nimport {useLetters} from '../../particles/hooks/useLetters';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface AppLogoProps {\n    name: string;\n\n    speed?: number;\n}\n\nexport const AppLogo: FC<AppLogoProps & ClassNameProps> = ({\n    name,\n    speed = 200,\n    className\n}) => {\n    const [letters, colors] = useLetters(name, speed);\n    return (\n        <div\n            data-testid=\"app-logo\"\n            className={classNames('flex flex-col items-center', className)}\n        >\n            <div className=\"font-mono text-2xl\">welcome to</div>\n            <div className=\"flex text-4xl font-logo font-bold\">\n                {letters.map(({key, char}) => (\n                    <div\n                        data-testid={`app-logo-${key}`}\n                        className={colors[key]}\n                        key={key}\n                    >\n                        {char}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n","import {FC, useMemo} from 'react';\nimport {useSelector} from 'react-redux';\nimport {environment} from '../../environment/environment';\nimport {AppActions} from '../../store/app/app-actions';\nimport {AppDialogType} from '../../store/app/app-model';\nimport {AppSelectors} from '../../store/app/app-selectors';\nimport {GameActions} from '../../store/game/game-actions';\nimport {AppLogo} from '../atoms/app/AppLogo';\nimport {AppMenu, AppMenuItem} from '../atoms/app/AppMenu';\nimport {AppDarkMode} from '../molecules/app/AppDarkMode';\n\nexport interface WelcomeProps {\n    selectStart?: () => number;\n}\n\nexport const Welcome: FC<WelcomeProps> = ({\n    selectStart = AppSelectors.startLevel\n}) => {\n    const startLevel = useSelector(selectStart);\n\n    const menu: Array<AppMenuItem> = useMemo(() => {\n        return [\n            {\n                title: 'New Game',\n                action: GameActions.start(startLevel),\n                active: true\n            },\n            {title: `Level: ${startLevel}`, action: AppActions.startLevel()},\n            {\n                title: 'High Scores',\n                action: AppActions.open(AppDialogType.HIGH_SCORES)\n            },\n            {title: 'Options', action: AppActions.open(AppDialogType.OPTIONS)},\n            {title: 'Credits', action: AppActions.open(AppDialogType.CREDITS)}\n        ];\n    }, [startLevel]);\n\n    return (\n        <div className=\"flex flex-col h-full\">\n            <AppLogo\n                className=\"mt-auto mb-14\"\n                name={environment.brandName.toUpperCase()}\n            />\n            <AppMenu className=\"w-44 ml-auto mr-auto\" items={menu} />\n            <AppDarkMode className=\"ml-auto mr-auto mt-5 mb-auto\" />\n        </div>\n    );\n};\n","import {useMediaQuery} from '@material-ui/core';\nimport {FC, useMemo} from 'react';\nimport {useSelector} from 'react-redux';\nimport {environment} from '../../environment/environment';\nimport {GameSelectors} from '../../store/game/game-selectors';\nimport {CreditsDialog} from '../organisms/dialogs/CreditsDialog';\nimport {FinishDialog} from '../organisms/dialogs/FinishDialog';\nimport {HighScoresDialog} from '../organisms/dialogs/HighScoresDialog';\nimport {OptionsDialog} from '../organisms/dialogs/OptionsDialog';\nimport {PauseDialog} from '../organisms/dialogs/PauseDialog';\nimport {UiThemeProvider} from '../particles/contexts/UiThemeContext';\nimport {usePageView} from '../particles/hooks/usePageView';\nimport {usePersist} from '../particles/hooks/usePersist';\nimport {useTitle} from '../particles/hooks/useTitle';\nimport {GameDesktop} from './GameDesktop';\nimport {GameMobile} from './GameMobile';\nimport {Welcome} from './Welcome';\n\nexport const App: FC = () => {\n    const welcoming = useSelector(GameSelectors.welcoming);\n    const isWideScreen = useMediaQuery('(min-width:600px)');\n    const isShortScreen = useMediaQuery('(max-height:850px)');\n    const isNarrowScreen = useMediaQuery('(max-width:380px)');\n\n    usePageView('/');\n    usePersist(environment.storageKey);\n    useTitle();\n\n    const game = useMemo(() => {\n        return (\n            <UiThemeProvider\n                transparent={!isWideScreen}\n                large={!isWideScreen && !isNarrowScreen}\n            >\n                {isWideScreen ? (\n                    <GameDesktop floatControls={isShortScreen} />\n                ) : (\n                    <GameMobile />\n                )}\n            </UiThemeProvider>\n        );\n    }, [isWideScreen, isShortScreen, isNarrowScreen]);\n\n    return (\n        <div className=\"flex flex-col w-full h-full\">\n            {welcoming ? <Welcome /> : game}\n            <PauseDialog />\n            <FinishDialog />\n            <HighScoresDialog />\n            <OptionsDialog />\n            <CreditsDialog />\n        </div>\n    );\n};\n","import {useEffect} from 'react';\nimport {useSelector} from 'react-redux';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {AppActions} from '../../../store/app/app-actions';\nimport {APP_PERSIST_DEFAULT, AppPersist} from '../../../store/app/app-model';\nimport {AppSelectors} from '../../../store/app/app-selectors';\n\nexport const usePersist = (storageKey: string) => {\n    const persist = useSelector(AppSelectors.persist);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        const json = localStorage.getItem(storageKey);\n        if (json) {\n            try {\n                const data: AppPersist = JSON.parse(json);\n                if (data?.version === APP_PERSIST_DEFAULT.version) {\n                    dispatch(AppActions.persist(data));\n                }\n            } catch (err) {\n                console.error('Could not read persist data.', err);\n            }\n        }\n    }, [storageKey, dispatch]);\n\n    useEffect(() => {\n        localStorage.setItem(storageKey, JSON.stringify(persist));\n    }, [storageKey, persist]);\n};\n","import {StylesProvider} from '@material-ui/core/styles';\nimport {FunctionComponent} from 'react';\nimport {useDarkMode} from '../../particles/hooks/useDarkMode';\n\nexport const AppTheme: FunctionComponent = ({children}) => {\n    useDarkMode();\n    return <StylesProvider injectFirst>{children}</StylesProvider>;\n};\n","import {useEffect} from 'react';\nimport {useSelector} from 'react-redux';\nimport {AppSelectors} from '../../../store/app/app-selectors';\n\nexport const useDarkMode = () => {\n    const dark = useSelector(AppSelectors.dark);\n    useEffect(() => {\n        const html = document.documentElement;\n        if (dark) {\n            html.classList.add('dark');\n        } else {\n            html.classList.remove('dark');\n        }\n    }, [dark]);\n};\n","import {FC, useMemo} from 'react';\nimport {Provider} from 'react-redux';\nimport {getAppStore} from '../../store/app-store';\nimport {AppTheme} from '../atoms/app/AppTheme';\n\nexport const Providers: FC = ({children}) => {\n    const store = useMemo(() => getAppStore(), []);\n    return (\n        <Provider store={store}>\n            <AppTheme>{children}</AppTheme>\n        </Provider>\n    );\n};\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\nimport {App} from './components/templates/App';\nimport {Providers} from './components/templates/Providers';\nimport {environment} from './environment/environment';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nif (environment.analytics) {\n    ReactGA.initialize(environment.analytics);\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <Providers>\n            <App />\n        </Providers>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}